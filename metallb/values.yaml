chart:
  files:
  - data: IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqLm9yaWcKKn4KIyBWYXJpb3VzIElERXMKLnByb2plY3QKLmlkZWEvCioudG1wcm9qCi52c2NvZGUvCg==
    name: .helmignore
  - data: 
    name: README.md
  - data: cGFja2FnZSBtYWluCgojIHZhbGlkYXRlIHNlcnZpY2VBY2NvdW50TmFtZQpkZW55W21zZ10gewogIGlucHV0LmtpbmQgPT0gIkRlcGxveW1lbnQiCiAgc2VydmljZUFjY291bnROYW1lIDo9IGlucHV0LnNwZWMudGVtcGxhdGUuc3BlYy5zZXJ2aWNlQWNjb3VudE5hbWUKICBub3Qgc2VydmljZUFjY291bnROYW1lID09ICJyZWxlYXNlLW5hbWUtbWV0YWxsYi1jb250cm9sbGVyIgogIG1zZyA9IHNwcmludGYoImNvbnRyb2xsZXIgc2VydmljZUFjY291bnROYW1lICclcycgZG9lcyBub3QgbWF0Y2ggZXhwZWN0ZWQgdmFsdWUiLCBbc2VydmljZUFjY291bnROYW1lXSkKfQoKIyB2YWxpZGF0ZSBub2RlIHNlbGVjdG9yIGluY2x1ZGVzIGJ1aWx0aW4gd2hlbiBjdXN0b20gb25lcyBhcmUgcHJvdmlkZWQKZGVueVttc2ddIHsKICBpbnB1dC5raW5kID09ICJEZXBsb3ltZW50IgogIG5vdCBpbnB1dC5zcGVjLnRlbXBsYXRlLnNwZWMubm9kZVNlbGVjdG9yWyJrdWJlcm5ldGVzLmlvL29zIl0gPT0gImxpbnV4IgogIG1zZyA9ICJjb250cm9sbGVyIG5vZGVTZWxlY3RvciBkb2VzIG5vdCBpbmNsdWRlICdcImt1YmVybmV0ZXMuaW8vb3NcIjogbGludXgnIgp9Cg==
    name: policy/controller.rego
  - data: cGFja2FnZSBtYWluCgojIFZhbGlkYXRlIFBTUCBleGlzdHMgaW4gQ2x1c3RlclJvbGUgOmNvbnRyb2xsZXIKZGVueVttc2ddIHsKICBpbnB1dC5raW5kID09ICJDbHVzdGVyUm9sZSIKICBpbnB1dC5tZXRhZGF0YS5uYW1lID09ICJtZXRhbGxiOmNvbnRyb2xsZXIiCiAgaW5wdXQucnVsZXNbM10gPT0gewoJImFwaUdyb3VwcyI6IFsicG9saWN5Il0sCgkicmVzb3VyY2VzIjogWyJwb2RzZWN1cml0eXBvbGljaWVzIl0sCgkicmVzb3VyY2VOYW1lcyI6IFsibWV0YWxsYi1jb250cm9sbGVyIl0sCgkidmVyYnMiOiBbInVzZSJdCiAgfQogIG1zZyA9ICJDbHVzdGVyUm9sZSBtZXRhbGxiOmNvbnRyb2xsZXIgZG9lcyBub3QgaW5jbHVkZSBQU1AgcnVsZSIKfQoKIyBWYWxpZGF0ZSBQU1AgZXhpc3RzIGluIENsdXN0ZXJSb2xlIDpzcGVha2VyCmRlbnlbbXNnXSB7CiAgaW5wdXQua2luZCA9PSAiQ2x1c3RlclJvbGUiCiAgaW5wdXQubWV0YWRhdGEubmFtZSA9PSAibWV0YWxsYjpzcGVha2VyIgogIGlucHV0LnJ1bGVzWzNdID09IHsKCSJhcGlHcm91cHMiOiBbInBvbGljeSJdLAoJInJlc291cmNlcyI6IFsicG9kc2VjdXJpdHlwb2xpY2llcyJdLAoJInJlc291cmNlTmFtZXMiOiBbIm1ldGFsbGItY29udHJvbGxlciJdLAoJInZlcmJzIjogWyJ1c2UiXQogIH0KICBtc2cgPSAiQ2x1c3RlclJvbGUgbWV0YWxsYjpzcGVha2VyIGRvZXMgbm90IGluY2x1ZGUgUFNQIHJ1bGUiCn0K
    name: policy/rbac.rego
  - data: cGFja2FnZSBtYWluCgojIHZhbGlkYXRlIHNlcnZpY2VBY2NvdW50TmFtZQpkZW55W21zZ10gewogIGlucHV0LmtpbmQgPT0gIkRhZW1vblNldCIKICBzZXJ2aWNlQWNjb3VudE5hbWUgOj0gaW5wdXQuc3BlYy50ZW1wbGF0ZS5zcGVjLnNlcnZpY2VBY2NvdW50TmFtZQogIG5vdCBzZXJ2aWNlQWNjb3VudE5hbWUgPT0gInJlbGVhc2UtbmFtZS1tZXRhbGxiLXNwZWFrZXIiCiAgbXNnID0gc3ByaW50Zigic3BlYWtlciBzZXJ2aWNlQWNjb3VudE5hbWUgJyVzJyBkb2VzIG5vdCBtYXRjaCBleHBlY3RlZCB2YWx1ZSIsIFtzZXJ2aWNlQWNjb3VudE5hbWVdKQp9CgojIHZhbGlkYXRlIE1FVEFMTEJfTUxfU0VDUkVUX0tFWSAobWVtYmVybGlzdCkKZGVueVttc2ddIHsKCWlucHV0LmtpbmQgPT0gIkRhZW1vblNldCIKCW5vdCBpbnB1dC5zcGVjLnRlbXBsYXRlLnNwZWMuY29udGFpbmVyc1swXS5lbnZbNV0ubmFtZSA9PSAiTUVUQUxMQl9NTF9TRUNSRVRfS0VZX1BBVEgiCgltc2cgPSAic3BlYWtlciBlbnYgZG9lcyBub3QgY29udGFpbiBNRVRBTExCX01MX1NFQ1JFVF9LRVlfUEFUSCBhdCBlbnZbNV0iCn0KCiMgdmFsaWRhdGUgbm9kZSBzZWxlY3RvciBpbmNsdWRlcyBidWlsdGluIHdoZW4gY3VzdG9tIG9uZXMgYXJlIHByb3ZpZGVkCmRlbnlbbXNnXSB7CiAgaW5wdXQua2luZCA9PSAiRGFlbW9uU2V0IgogIG5vdCBpbnB1dC5zcGVjLnRlbXBsYXRlLnNwZWMubm9kZVNlbGVjdG9yWyJrdWJlcm5ldGVzLmlvL29zIl0gPT0gImxpbnV4IgogIG1zZyA9ICJjb250cm9sbGVyIG5vZGVTZWxlY3RvciBkb2VzIG5vdCBpbmNsdWRlICdcImt1YmVybmV0ZXMuaW8vb3NcIjogbGludXgnIgp9CgojIHZhbGlkYXRlIHRvbGVyYXRpb25zIGluY2x1ZGUgdGhlIGJ1aWx0aW5zIHdoZW4gY3VzdG9tIG9uZXMgYXJlIHByb3ZpZGVkCmRlbnlbbXNnXSB7CiAgaW5wdXQua2luZCA9PSAiRGFlbW9uU2V0IgogIG5vdCBpbnB1dC5zcGVjLnRlbXBsYXRlLnNwZWMudG9sZXJhdGlvbnNbMF0gPT0geyAia2V5IjogIm5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlciIsICJlZmZlY3QiOiAiTm9TY2hlZHVsZSIsICJvcGVyYXRvciI6ICJFeGlzdHMiIH0KICBtc2cgPSAiY29udHJvbGxlciB0b2xlcmF0aW9ucyBkb2VzIG5vdCBpbmNsdWRlIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcjpOb1NjaGVkdWxlIgp9Cg==
    name: policy/speaker.rego
  lock:
    dependencies:
    - name: crds
      repository: ""
      version: 0.15.2
    - name: frr-k8s
      repository: https://metallb.github.io/frr-k8s
      version: 0.0.20
    digest: sha256:fcba6d1c8e25efca7a64d2ea30079bfcf041c277605d5881d65d5b3d09a41483
    generated: "2025-06-04T12:37:51.709832109+02:00"
  metadata:
    apiVersion: v2
    appVersion: v0.15.2
    dependencies:
    - condition: crds.enabled
      enabled: true
      name: crds
      repository: ""
      version: 0.15.2
    description: A network load-balancer implementation for Kubernetes using standard
      routing protocols
    home: https://metallb.universe.tf
    icon: https://metallb.universe.tf/images/logo/metallb-white.png
    kubeVersion: '>= 1.19.0-0'
    name: metallb
    sources:
    - https://github.com/metallb/metallb
    type: application
    version: 0.15.2
  schema: 
  templates:
  - data: TWV0YWxMQiBpcyBub3cgcnVubmluZyBpbiB0aGUgY2x1c3Rlci4KCk5vdyB5b3UgY2FuIGNvbmZpZ3VyZSBpdCB2aWEgaXRzIENScy4gUGxlYXNlIHJlZmVyIHRvIHRoZSBtZXRhbGxiIG9mZmljaWFsIGRvY3MKb24gaG93IHRvIHVzZSB0aGUgQ1JzLgo=
    name: templates/NOTES.txt
  - data: e3svKiB2aW06IHNldCBmaWxldHlwZT1tdXN0YWNoZTogKi99fQp7ey8qCkV4cGFuZCB0aGUgbmFtZSBvZiB0aGUgY2hhcnQuCiovfX0Ke3stIGRlZmluZSAibWV0YWxsYi5uYW1lIiAtfX0Ke3stIGRlZmF1bHQgLkNoYXJ0Lk5hbWUgLlZhbHVlcy5uYW1lT3ZlcnJpZGUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIH19Cnt7LSBlbmQgfX0KCnt7LyoKQ3JlYXRlIGEgZGVmYXVsdCBmdWxseSBxdWFsaWZpZWQgYXBwIG5hbWUuCldlIHRydW5jYXRlIGF0IDYzIGNoYXJzIGJlY2F1c2Ugc29tZSBLdWJlcm5ldGVzIG5hbWUgZmllbGRzIGFyZSBsaW1pdGVkIHRvIHRoaXMgKGJ5IHRoZSBETlMgbmFtaW5nIHNwZWMpLgpJZiByZWxlYXNlIG5hbWUgY29udGFpbnMgY2hhcnQgbmFtZSBpdCB3aWxsIGJlIHVzZWQgYXMgYSBmdWxsIG5hbWUuCiovfX0Ke3stIGRlZmluZSAibWV0YWxsYi5mdWxsbmFtZSIgLX19Cnt7LSBpZiAuVmFsdWVzLmZ1bGxuYW1lT3ZlcnJpZGUgfX0Ke3stIC5WYWx1ZXMuZnVsbG5hbWVPdmVycmlkZSB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgfX0Ke3stIGVsc2UgfX0Ke3stICRuYW1lIDo9IGRlZmF1bHQgLkNoYXJ0Lk5hbWUgLlZhbHVlcy5uYW1lT3ZlcnJpZGUgfX0Ke3stIGlmIGNvbnRhaW5zICRuYW1lIC5SZWxlYXNlLk5hbWUgfX0Ke3stIC5SZWxlYXNlLk5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIH19Cnt7LSBlbHNlIH19Cnt7LSBwcmludGYgIiVzLSVzIiAuUmVsZWFzZS5OYW1lICRuYW1lIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiB9fQp7ey0gZW5kIH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQoKe3svKgpDcmVhdGUgY2hhcnQgbmFtZSBhbmQgdmVyc2lvbiBhcyB1c2VkIGJ5IHRoZSBjaGFydCBsYWJlbC4KKi99fQp7ey0gZGVmaW5lICJtZXRhbGxiLmNoYXJ0IiAtfX0Ke3stIHByaW50ZiAiJXMtJXMiIC5DaGFydC5OYW1lIC5DaGFydC5WZXJzaW9uIHwgcmVwbGFjZSAiKyIgIl8iIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiB9fQp7ey0gZW5kIH19Cgp7ey8qCkNvbW1vbiBsYWJlbHMKKi99fQp7ey0gZGVmaW5lICJtZXRhbGxiLmxhYmVscyIgLX19CmhlbG0uc2gvY2hhcnQ6IHt7IGluY2x1ZGUgIm1ldGFsbGIuY2hhcnQiIC4gfX0Ke3sgaW5jbHVkZSAibWV0YWxsYi5zZWxlY3RvckxhYmVscyIgLiB9fQp7ey0gaWYgLkNoYXJ0LkFwcFZlcnNpb24gfX0KYXBwLmt1YmVybmV0ZXMuaW8vdmVyc2lvbjoge3sgLkNoYXJ0LkFwcFZlcnNpb24gfCBxdW90ZSB9fQp7ey0gZW5kIH19CmFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnk6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfX0Ke3stIGVuZCB9fQoKe3svKgpTZWxlY3RvciBsYWJlbHMKKi99fQp7ey0gZGVmaW5lICJtZXRhbGxiLnNlbGVjdG9yTGFiZWxzIiAtfX0KYXBwLmt1YmVybmV0ZXMuaW8vbmFtZToge3sgaW5jbHVkZSAibWV0YWxsYi5uYW1lIiAuIH19CmFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlOiB7eyAuUmVsZWFzZS5OYW1lIH19Cnt7LSBlbmQgfX0KCnt7LyoKQ3JlYXRlIHRoZSBuYW1lIG9mIHRoZSBjb250cm9sbGVyIHNlcnZpY2UgYWNjb3VudCB0byB1c2UKKi99fQp7ey0gZGVmaW5lICJtZXRhbGxiLmNvbnRyb2xsZXIuc2VydmljZUFjY291bnROYW1lIiAtfX0Ke3stIGlmIC5WYWx1ZXMuY29udHJvbGxlci5zZXJ2aWNlQWNjb3VudC5jcmVhdGUgfX0Ke3stIGRlZmF1bHQgKHByaW50ZiAiJXMtY29udHJvbGxlciIgKGluY2x1ZGUgIm1ldGFsbGIuZnVsbG5hbWUiIC4pKSAuVmFsdWVzLmNvbnRyb2xsZXIuc2VydmljZUFjY291bnQubmFtZSB9fQp7ey0gZWxzZSB9fQp7ey0gZGVmYXVsdCAiZGVmYXVsdCIgLlZhbHVlcy5jb250cm9sbGVyLnNlcnZpY2VBY2NvdW50Lm5hbWUgfX0Ke3stIGVuZCB9fQp7ey0gZW5kIH19Cgp7ey8qCkNyZWF0ZSB0aGUgbmFtZSBvZiB0aGUgc3BlYWtlciBzZXJ2aWNlIGFjY291bnQgdG8gdXNlCiovfX0Ke3stIGRlZmluZSAibWV0YWxsYi5zcGVha2VyLnNlcnZpY2VBY2NvdW50TmFtZSIgLX19Cnt7LSBpZiAuVmFsdWVzLnNwZWFrZXIuc2VydmljZUFjY291bnQuY3JlYXRlIH19Cnt7LSBkZWZhdWx0IChwcmludGYgIiVzLXNwZWFrZXIiIChpbmNsdWRlICJtZXRhbGxiLmZ1bGxuYW1lIiAuKSkgLlZhbHVlcy5zcGVha2VyLnNlcnZpY2VBY2NvdW50Lm5hbWUgfX0Ke3stIGVsc2UgfX0Ke3stIGRlZmF1bHQgImRlZmF1bHQiIC5WYWx1ZXMuc3BlYWtlci5zZXJ2aWNlQWNjb3VudC5uYW1lIH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQoKe3svKgpDcmVhdGUgdGhlIG5hbWUgb2YgdGhlIHNldHRpbmdzIFNlY3JldCB0byB1c2UuCiovfX0Ke3stIGRlZmluZSAibWV0YWxsYi5zZWNyZXROYW1lIiAtfX0KICAgIHt7IGRlZmF1bHQgKCBwcmludGYgIiVzLW1lbWJlcmxpc3QiIChpbmNsdWRlICJtZXRhbGxiLmZ1bGxuYW1lIiAuKSkgLlZhbHVlcy5zcGVha2VyLnNlY3JldE5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIH19Cnt7LSBlbmQgLX19Cgp7ey0gZGVmaW5lICJtZXRyaWNzLmV4cG9zZWRwb3J0bmFtZSIgLX19Cnt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMuc2VjdXJlTWV0cmljc1BvcnQgLX19CiJtZXRyaWNzaHR0cHMiCnt7LSBlbHNlIC19fQoibWV0cmljcyIKe3stIGVuZCAtfX0Ke3stIGVuZCAtfX0KCnt7LSBkZWZpbmUgIm1ldHJpY3MuZXhwb3NlZGZycnBvcnRuYW1lIiAtfX0Ke3stIGlmIC5WYWx1ZXMuc3BlYWtlci5mcnIuc2VjdXJlTWV0cmljc1BvcnQgLX19CiJmcnJtZXRyaWNzaHR0cHMiCnt7LSBlbHNlIC19fQoiZnJybWV0cmljcyIKe3stIGVuZCB9fQp7ey0gZW5kIH19Cgp7ey0gZGVmaW5lICJtZXRyaWNzLmV4cG9zZWRwb3J0IiAtfX0Ke3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5zZWN1cmVNZXRyaWNzUG9ydCAtfX0Ke3sgLlZhbHVlcy5wcm9tZXRoZXVzLnNlY3VyZU1ldHJpY3NQb3J0IH19Cnt7LSBlbHNlIC19fQp7eyAuVmFsdWVzLnByb21ldGhldXMubWV0cmljc1BvcnQgfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCB9fQoKe3stIGRlZmluZSAibWV0cmljcy5leHBvc2VkZnJycG9ydCIgLX19Cnt7LSBpZiAuVmFsdWVzLnNwZWFrZXIuZnJyLnNlY3VyZU1ldHJpY3NQb3J0IC19fQp7eyAuVmFsdWVzLnNwZWFrZXIuZnJyLnNlY3VyZU1ldHJpY3NQb3J0IH19Cnt7LSBlbHNlIC19fQp7eyAuVmFsdWVzLnNwZWFrZXIuZnJyLm1ldHJpY3NQb3J0IH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQoK
    name: templates/_helpers.tpl
  - data: 
    name: templates/controller.yaml
  - data: e3stIGlmIC5WYWx1ZXMuY29uZmlnSW5saW5lIH19Cnt7LSBmYWlsICJTdGFydGluZyBmcm9tIHYwLjEzLjAgY29uZmlnSW5saW5lIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQuIFBsZWFzZSBzZWUgaHR0cHM6Ly9tZXRhbGxiLnVuaXZlcnNlLnRmLyNiYWNrd2FyZC1jb21wYXRpYmlsaXR5IiB9fQp7ey0gZW5kIH19Cg==
    name: templates/deprecated_configInline.yaml
  - data: e3stIGlmIGFuZCAuVmFsdWVzLnNwZWFrZXIuZW5hYmxlZCAuVmFsdWVzLnNwZWFrZXIuZXhjbHVkZUludGVyZmFjZXMuZW5hYmxlZCB9fQphcGlWZXJzaW9uOiB2MQpraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6CiAgbmFtZTogbWV0YWxsYi1leGNsdWRlbDIKICBuYW1lc3BhY2U6IHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB8IHF1b3RlIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgIm1ldGFsbGIubGFiZWxzIiAuIHwgbmluZGVudCA0IH19CmRhdGE6CiAgZXhjbHVkZWwyLnlhbWw6IHwKICAgIGFubm91bmNlZEludGVyZmFjZXNUb0V4Y2x1ZGU6CiAgICAtIF5kb2NrZXIuKgogICAgLSBeY2JyLioKICAgIC0gXmR1bW15LioKICAgIC0gXnZpcmJyLioKICAgIC0gXmx4Y2JyLioKICAgIC0gXnZldGguKgogICAgLSBebG8kCiAgICAtIF5jYWxpLioKICAgIC0gXnR1bmwuKgogICAgLSBeZmxhbm5lbC4qCiAgICAtIF5rdWJlLWlwdnMuKgogICAgLSBeY25pLioKICAgIC0gXm5vZGVsb2NhbGRucy4qCnt7LSBlbmQgfX0=
    name: templates/exclude-l2-config.yaml
  - data: e3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmVuYWJsZWQgfX0KYXBpVmVyc2lvbjogbW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxCmtpbmQ6IFBvZE1vbml0b3IKbWV0YWRhdGE6CiAgbmFtZToge3sgdGVtcGxhdGUgIm1ldGFsbGIuZnVsbG5hbWUiIC4gfX0tY29udHJvbGxlcgogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJtZXRhbGxiLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogICAgYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50OiBjb250cm9sbGVyCiAgICB7ey0gaWYgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuYWRkaXRpb25hbExhYmVscyB9fQp7eyB0b1lhbWwgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuYWRkaXRpb25hbExhYmVscyB8IGluZGVudCA0IH19CiAgICB7ey0gZW5kIH19CiAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5hbm5vdGF0aW9ucyB8IGluZGVudCA0IH19CiAge3stIGVuZCB9fQpzcGVjOgogIGpvYkxhYmVsOiB7eyAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5qb2JMYWJlbCB8IHF1b3RlIH19CiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAge3stIGluY2x1ZGUgIm1ldGFsbGIuc2VsZWN0b3JMYWJlbHMiIC4gfCBuaW5kZW50IDYgfX0KICAgICAgYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50OiBjb250cm9sbGVyCiAgbmFtZXNwYWNlU2VsZWN0b3I6CiAgICBtYXRjaE5hbWVzOgogICAgLSB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0KICBwb2RNZXRyaWNzRW5kcG9pbnRzOgogIC0gcG9ydDogbW9uaXRvcmluZwogICAgcGF0aDogL21ldHJpY3MKICAgIHt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5pbnRlcnZhbCB9fQogICAgaW50ZXJ2YWw6IHt7IC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmludGVydmFsIH19CiAgICB7ey0gZW5kIH19Cnt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5tZXRyaWNSZWxhYmVsaW5ncyB9fQogICAgbWV0cmljUmVsYWJlbGluZ3M6Cnt7LSB0b1lhbWwgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IubWV0cmljUmVsYWJlbGluZ3MgfCBuaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gaWYgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IucmVsYWJlbGluZ3MgfX0KICAgIHJlbGFiZWxpbmdzOgp7ey0gdG9ZYW1sIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLnJlbGFiZWxpbmdzIHwgbmluZGVudCA0IH19Cnt7LSBlbmQgfX0Ke3stIGlmIC5WYWx1ZXMuc3BlYWtlci5lbmFibGVkIH19Ci0tLQphcGlWZXJzaW9uOiBtb25pdG9yaW5nLmNvcmVvcy5jb20vdjEKa2luZDogUG9kTW9uaXRvcgptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS1zcGVha2VyCiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgIm1ldGFsbGIubGFiZWxzIiAuIHwgbmluZGVudCA0IH19CiAgICBhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQ6IHNwZWFrZXIKICAgIHt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5hZGRpdGlvbmFsTGFiZWxzIH19Cnt7IHRvWWFtbCAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5hZGRpdGlvbmFsTGFiZWxzIHwgaW5kZW50IDQgfX0KICAgIHt7LSBlbmQgfX0KICB7ey0gaWYgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKe3sgdG9ZYW1sIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmFubm90YXRpb25zIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIH19CnNwZWM6CiAgam9iTGFiZWw6IHt7IC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmpvYkxhYmVsIHwgcXVvdGUgfX0KICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICB7ey0gaW5jbHVkZSAibWV0YWxsYi5zZWxlY3RvckxhYmVscyIgLiB8IG5pbmRlbnQgNiB9fQogICAgICBhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQ6IHNwZWFrZXIKICBuYW1lc3BhY2VTZWxlY3RvcjoKICAgIG1hdGNoTmFtZXM6CiAgICAtIHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fQogIHBvZE1ldHJpY3NFbmRwb2ludHM6CiAgLSBwb3J0OiBtb25pdG9yaW5nCiAgICBwYXRoOiAvbWV0cmljcwogICAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLmludGVydmFsIH19CiAgICBpbnRlcnZhbDoge3sgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuaW50ZXJ2YWwgfX0KICAgIHt7LSBlbmQgfX0Ke3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wb2RNb25pdG9yLm1ldHJpY1JlbGFiZWxpbmdzIH19CiAgICBtZXRyaWNSZWxhYmVsaW5nczoKe3stIHRvWWFtbCAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5tZXRyaWNSZWxhYmVsaW5ncyB8IG5pbmRlbnQgNCB9fQp7ey0gZW5kIH19Cnt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMucG9kTW9uaXRvci5yZWxhYmVsaW5ncyB9fQogICAgcmVsYWJlbGluZ3M6Cnt7LSB0b1lhbWwgLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IucmVsYWJlbGluZ3MgfCBuaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gZW5kIH19Ci0tLQp7ey0gaWYgLlZhbHVlcy5wcm9tZXRoZXVzLnJiYWNQcm9tZXRoZXVzIH19CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogUm9sZQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS1wcm9tZXRoZXVzCnJ1bGVzOgogIC0gYXBpR3JvdXBzOgogICAgICAtICIiCiAgICByZXNvdXJjZXM6CiAgICAgIC0gcG9kcwogICAgdmVyYnM6CiAgICAgIC0gZ2V0CiAgICAgIC0gbGlzdAogICAgICAtIHdhdGNoCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IFJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJtZXRhbGxiLmZ1bGxuYW1lIiAuIH19LXByb21ldGhldXMKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IFJvbGUKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS1wcm9tZXRoZXVzCnN1YmplY3RzOgogIC0ga2luZDogU2VydmljZUFjY291bnQKICAgIG5hbWU6IHt7IHJlcXVpcmVkICIuVmFsdWVzLnByb21ldGhldXMuc2VydmljZUFjY291bnQgbXVzdCBiZSBkZWZpbmVkIHdoZW4gLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuZW5hYmxlZCA9PSB0cnVlIiAuVmFsdWVzLnByb21ldGhldXMuc2VydmljZUFjY291bnQgfX0KICAgIG5hbWVzcGFjZToge3sgcmVxdWlyZWQgIi5WYWx1ZXMucHJvbWV0aGV1cy5uYW1lc3BhY2UgbXVzdCBiZSBkZWZpbmVkIHdoZW4gLlZhbHVlcy5wcm9tZXRoZXVzLnBvZE1vbml0b3IuZW5hYmxlZCA9PSB0cnVlIiAuVmFsdWVzLnByb21ldGhldXMubmFtZXNwYWNlIH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQo=
    name: templates/podmonitor.yaml
  - data: e3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5lbmFibGVkIH19CmFwaVZlcnNpb246IG1vbml0b3JpbmcuY29yZW9zLmNvbS92MQpraW5kOiBQcm9tZXRoZXVzUnVsZQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJtZXRhbGxiLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogICAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRpdGlvbmFsTGFiZWxzIH19Cnt7IHRvWWFtbCAuVmFsdWVzLnByb21ldGhldXMucHJvbWV0aGV1c1J1bGUuYWRkaXRpb25hbExhYmVscyB8IGluZGVudCA0IH19CiAgICB7ey0gZW5kIH19CiAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgp7eyB0b1lhbWwgLlZhbHVlcy5wcm9tZXRoZXVzLnByb21ldGhldXNSdWxlLmFubm90YXRpb25zIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIH19CnNwZWM6CiAgZ3JvdXBzOgogIC0gbmFtZToge3sgdGVtcGxhdGUgIm1ldGFsbGIuZnVsbG5hbWUiIC4gfX0ucnVsZXMKICAgIHJ1bGVzOgogICAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5zdGFsZUNvbmZpZy5lbmFibGVkIH19CiAgICAtIGFsZXJ0OiBNZXRhbExCU3RhbGVDb25maWcKICAgICAgYW5ub3RhdGlvbnM6CiAgICAgICAgc3VtbWFyeToge3tgJ1N0YWxlIGNvbmZpZyBvbiB7eyAkbGFiZWxzLnBvZCB9fSdgfX0KICAgICAgICBkZXNjcmlwdGlvbjoge3tgJ3t7ICRsYWJlbHMuam9iIH19IC0gTWV0YWxMQiB7eyAkbGFiZWxzLmNvbnRhaW5lciB9fSBvbiB7eyAkbGFiZWxzLnBvZCB9fSBoYXMgYSBzdGFsZSBjb25maWcgZm9yID4gMSBtaW51dGUnYH19CiAgICAgIGV4cHI6IG1ldGFsbGJfazhzX2NsaWVudF9jb25maWdfc3RhbGVfYm9vbHtqb2I9fiJ7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS4qIn0gPT0gMQogICAgICBmb3I6IDFtCiAgICAgIHt7LSB3aXRoIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5zdGFsZUNvbmZpZy5sYWJlbHMgfX0KICAgICAgbGFiZWxzOgogICAgICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgOCB9fQogICAgICB7ey0gZW5kIH19CiAgICB7ey0gZW5kIH19CiAgICB7ey0gaWYgLlZhbHVlcy5wcm9tZXRoZXVzLnByb21ldGhldXNSdWxlLmNvbmZpZ05vdExvYWRlZC5lbmFibGVkIH19CiAgICAtIGFsZXJ0OiBNZXRhbExCQ29uZmlnTm90TG9hZGVkCiAgICAgIGFubm90YXRpb25zOgogICAgICAgIHN1bW1hcnk6IHt7YCdDb25maWcgb24ge3sgJGxhYmVscy5wb2QgfX0gaGFzIG5vdCBiZWVuIGxvYWRlZCdgfX0KICAgICAgICBkZXNjcmlwdGlvbjoge3tgJ3t7ICRsYWJlbHMuam9iIH19IC0gTWV0YWxMQiB7eyAkbGFiZWxzLmNvbnRhaW5lciB9fSBvbiB7eyAkbGFiZWxzLnBvZCB9fSBoYXMgbm90IGxvYWRlZCBmb3IgPiAxIG1pbnV0ZSdgfX0KICAgICAgZXhwcjogbWV0YWxsYl9rOHNfY2xpZW50X2NvbmZpZ19sb2FkZWRfYm9vbHtqb2I9fiJ7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS4qIn0gPT0gMAogICAgICBmb3I6IDFtCiAgICAgIHt7LSB3aXRoIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5jb25maWdOb3RMb2FkZWQubGFiZWxzIH19CiAgICAgIGxhYmVsczoKICAgICAgICB7ey0gdG9ZYW1sIC4gfCBuaW5kZW50IDggfX0KICAgICAge3stIGVuZCB9fQogICAge3stIGVuZCB9fQogICAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRyZXNzUG9vbEV4aGF1c3RlZC5lbmFibGVkIH19CiAgICB7eyAkZXhjbHVkZSA6PSAuVmFsdWVzLnByb21ldGhldXMucHJvbWV0aGV1c1J1bGUuYWRkcmVzc1Bvb2xFeGhhdXN0ZWQuZXhjbHVkZVBvb2xzIH19CiAgICAtIGFsZXJ0OiBNZXRhbExCQWRkcmVzc1Bvb2xFeGhhdXN0ZWQKICAgICAgYW5ub3RhdGlvbnM6CiAgICAgICAgc3VtbWFyeToge3tgJ0V4aGF1c3RlZCBhZGRyZXNzIHBvb2wgb24ge3sgJGxhYmVscy5wb2QgfX0nYH19CiAgICAgICAgZGVzY3JpcHRpb246IHt7YCd7eyAkbGFiZWxzLmpvYiB9fSAtIE1ldGFsTEIge3sgJGxhYmVscy5jb250YWluZXIgfX0gb24ge3sgJGxhYmVscy5wb2QgfX0gaGFzIGV4aGF1c3RlZCBhZGRyZXNzIHBvb2wge3sgJGxhYmVscy5wb29sIH19IGZvciA+IDEgbWludXRlJ2B9fQogICAgICBleHByOiBtZXRhbGxiX2FsbG9jYXRvcl9hZGRyZXNzZXNfaW5fdXNlX3RvdGFse3Bvb2whfiJ7eyAkZXhjbHVkZSB9fSJ9ID49IG9uKHBvb2wpIG1ldGFsbGJfYWxsb2NhdG9yX2FkZHJlc3Nlc190b3RhbAogICAgICBmb3I6IDFtCiAgICAgIHt7LSB3aXRoIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRyZXNzUG9vbEV4aGF1c3RlZC5sYWJlbHMgfX0KICAgICAgbGFiZWxzOgogICAgICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgOCB9fQogICAgICB7ey0gZW5kIH19CiAgICB7ey0gZW5kIH19CgogICAge3stIGlmIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRyZXNzUG9vbFVzYWdlLmVuYWJsZWQgfX0KICAgIHt7ICRleGNsdWRlIDo9IC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRyZXNzUG9vbFVzYWdlLmV4Y2x1ZGVQb29scyB9fQogICAge3stIHJhbmdlIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5hZGRyZXNzUG9vbFVzYWdlLnRocmVzaG9sZHMgfX0KICAgIC0gYWxlcnQ6IE1ldGFsTEJBZGRyZXNzUG9vbFVzYWdle3sgLnBlcmNlbnQgfX1QZXJjZW50CiAgICAgIGFubm90YXRpb25zOgogICAgICAgIHN1bW1hcnk6IHt7YCdFeGhhdXN0ZWQgYWRkcmVzcyBwb29sIG9uIHt7ICRsYWJlbHMucG9kIH19J2B9fQogICAgICAgIG1lc3NhZ2U6IHt7YCd7eyAkbGFiZWxzLmpvYiB9fSAtIE1ldGFsTEIge3sgJGxhYmVscy5jb250YWluZXIgfX0gb24ge3sgJGxhYmVscy5wb2QgfX0gaGFzIGFkZHJlc3MgcG9vbCB7eyAkbGFiZWxzLnBvb2wgfX0gcGFzdCBgfX17eyAucGVyY2VudCB9fXt7YCUgdXNhZ2UgZm9yID4gMSBtaW51dGUnYH19CiAgICAgIGV4cHI6ICggbWV0YWxsYl9hbGxvY2F0b3JfYWRkcmVzc2VzX2luX3VzZV90b3RhbHtwb29sIX4ie3sgJGV4Y2x1ZGUgfX0ifSAvIG9uKHBvb2wpIG1ldGFsbGJfYWxsb2NhdG9yX2FkZHJlc3Nlc190b3RhbCApICogMTAwID4ge3sgLnBlcmNlbnQgfX0KICAgICAge3stIHdpdGggLmxhYmVscyB9fQogICAgICBsYWJlbHM6CiAgICAgICAge3stIHRvWWFtbCAuIHwgbmluZGVudCA4IH19CiAgICAgIHt7LSBlbmQgfX0KICAgIHt7LSBlbmQgfX0KICAgIHt7LSBlbmQgfX0KICAgIHt7LSBpZiAuVmFsdWVzLnByb21ldGhldXMucHJvbWV0aGV1c1J1bGUuYmdwU2Vzc2lvbkRvd24uZW5hYmxlZCB9fQogICAgLSBhbGVydDogTWV0YWxMQkJHUFNlc3Npb25Eb3duCiAgICAgIGFubm90YXRpb25zOgogICAgICAgIHN1bW1hcnk6ICB7e2AnQkdQIHNlc3Npb24gZG93biBvbiB7eyAkbGFiZWxzLnBvZCB9fSdgfX0KICAgICAgICBtZXNzYWdlOiB7e2Ane3sgJGxhYmVscy5qb2IgfX0gLSBNZXRhbExCIHt7ICRsYWJlbHMuY29udGFpbmVyIH19IG9uIHt7ICRsYWJlbHMucG9kIH19IGhhcyBCR1Agc2Vzc2lvbiB7eyAkbGFiZWxzLnBlZXIgfX0gZG93biBmb3IgPiAxIG1pbnV0ZSdgfX0KICAgICAgZXhwcjogbWV0YWxsYl9iZ3Bfc2Vzc2lvbl91cHtqb2I9fiJ7eyB0ZW1wbGF0ZSAibWV0YWxsYi5mdWxsbmFtZSIgLiB9fS4qIn0gPT0gMAogICAgICBmb3I6IDFtCiAgICAgIHt7LSB3aXRoIC5WYWx1ZXMucHJvbWV0aGV1cy5wcm9tZXRoZXVzUnVsZS5iZ3BTZXNzaW9uRG93bi5sYWJlbHMgfX0KICAgICAgbGFiZWxzOgogICAgICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgOCB9fQogICAgICB7ey0gZW5kIH19CiAgICB7ey0gZW5kIH19CiAgICB7ey0gd2l0aCAuVmFsdWVzLnByb21ldGhldXMucHJvbWV0aGV1c1J1bGUuZXh0cmFBbGVydHMgfX0KICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgNCB9fQogICAge3stIGVuZH19Cnt7LSBlbmQgfX0K
    name: templates/prometheusrules.yaml
  - data: 
    name: templates/rbac.yaml
  - data: e3stIGlmIC5WYWx1ZXMuY29udHJvbGxlci5zZXJ2aWNlQWNjb3VudC5jcmVhdGUgfX0KLS0tCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJtZXRhbGxiLmNvbnRyb2xsZXIuc2VydmljZUFjY291bnROYW1lIiAuIH19CiAgbmFtZXNwYWNlOiB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfCBxdW90ZSB9fQogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJtZXRhbGxiLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogICAgYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50OiBjb250cm9sbGVyCiAge3stIHdpdGggLlZhbHVlcy5jb250cm9sbGVyLnNlcnZpY2VBY2NvdW50LmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6CiAgICB7ey0gdG9ZYW1sIC4gfCBuaW5kZW50IDQgfX0KICB7ey0gZW5kIH19Cnt7LSBlbmQgfX0Ke3stIGlmIGFuZCAuVmFsdWVzLnNwZWFrZXIuZW5hYmxlZCAuVmFsdWVzLnNwZWFrZXIuc2VydmljZUFjY291bnQuY3JlYXRlIH19Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlQWNjb3VudAptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWV0YWxsYi5zcGVha2VyLnNlcnZpY2VBY2NvdW50TmFtZSIgLiB9fQogIG5hbWVzcGFjZToge3sgLlJlbGVhc2UuTmFtZXNwYWNlIHwgcXVvdGUgfX0KICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAibWV0YWxsYi5sYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudDogc3BlYWtlcgogIHt7LSB3aXRoIC5WYWx1ZXMuc3BlYWtlci5zZXJ2aWNlQWNjb3VudC5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgogICAge3stIHRvWWFtbCAuIHwgbmluZGVudCA0IH19CiAge3stIGVuZCB9fQp7ey0gZW5kIH19Cg==
    name: templates/service-accounts.yaml
  - data: 
    name: templates/servicemonitor.yaml
  - data: 
    name: templates/speaker.yaml
  - data: YXBpVmVyc2lvbjogYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pby92MQpraW5kOiBWYWxpZGF0aW5nV2ViaG9va0NvbmZpZ3VyYXRpb24KbWV0YWRhdGE6CiAgbmFtZTogbWV0YWxsYi13ZWJob29rLWNvbmZpZ3VyYXRpb24KICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAibWV0YWxsYi5sYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0Kd2ViaG9va3M6Ci0gYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnM6CiAgLSB2MQogIGNsaWVudENvbmZpZzoKICAgIHNlcnZpY2U6CiAgICAgIG5hbWU6IG1ldGFsbGItd2ViaG9vay1zZXJ2aWNlCiAgICAgIG5hbWVzcGFjZToge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19CiAgICAgIHBhdGg6IC92YWxpZGF0ZS1tZXRhbGxiLWlvLXYxYmV0YTItYmdwcGVlcgogIGZhaWx1cmVQb2xpY3k6IHt7IC5WYWx1ZXMuY3Jkcy52YWxpZGF0aW9uRmFpbHVyZVBvbGljeSB9fQogIG5hbWU6IGJncHBlZXJ2YWxpZGF0aW9ud2ViaG9vay5tZXRhbGxiLmlvCiAgcnVsZXM6CiAgLSBhcGlHcm91cHM6CiAgICAtIG1ldGFsbGIuaW8KICAgIGFwaVZlcnNpb25zOgogICAgLSB2MWJldGEyCiAgICBvcGVyYXRpb25zOgogICAgLSBDUkVBVEUKICAgIC0gVVBEQVRFCiAgICByZXNvdXJjZXM6CiAgICAtIGJncHBlZXJzCiAgc2lkZUVmZmVjdHM6IE5vbmUKLSBhZG1pc3Npb25SZXZpZXdWZXJzaW9uczoKICAtIHYxCiAgY2xpZW50Q29uZmlnOgogICAgc2VydmljZToKICAgICAgbmFtZTogbWV0YWxsYi13ZWJob29rLXNlcnZpY2UKICAgICAgbmFtZXNwYWNlOiB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0KICAgICAgcGF0aDogL3ZhbGlkYXRlLW1ldGFsbGItaW8tdjFiZXRhMS1pcGFkZHJlc3Nwb29sCiAgZmFpbHVyZVBvbGljeToge3sgLlZhbHVlcy5jcmRzLnZhbGlkYXRpb25GYWlsdXJlUG9saWN5IH19CiAgbmFtZTogaXBhZGRyZXNzcG9vbHZhbGlkYXRpb253ZWJob29rLm1ldGFsbGIuaW8KICBydWxlczoKICAtIGFwaUdyb3VwczoKICAgIC0gbWV0YWxsYi5pbwogICAgYXBpVmVyc2lvbnM6CiAgICAtIHYxYmV0YTEKICAgIG9wZXJhdGlvbnM6CiAgICAtIENSRUFURQogICAgLSBVUERBVEUKICAgIHJlc291cmNlczoKICAgIC0gaXBhZGRyZXNzcG9vbHMKICBzaWRlRWZmZWN0czogTm9uZQotIGFkbWlzc2lvblJldmlld1ZlcnNpb25zOgogIC0gdjEKICBjbGllbnRDb25maWc6CiAgICBzZXJ2aWNlOgogICAgICBuYW1lOiBtZXRhbGxiLXdlYmhvb2stc2VydmljZQogICAgICBuYW1lc3BhY2U6IHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fQogICAgICBwYXRoOiAvdmFsaWRhdGUtbWV0YWxsYi1pby12MWJldGExLWJncGFkdmVydGlzZW1lbnQKICBmYWlsdXJlUG9saWN5OiB7eyAuVmFsdWVzLmNyZHMudmFsaWRhdGlvbkZhaWx1cmVQb2xpY3kgfX0KICBuYW1lOiBiZ3BhZHZlcnRpc2VtZW50dmFsaWRhdGlvbndlYmhvb2subWV0YWxsYi5pbwogIHJ1bGVzOgogIC0gYXBpR3JvdXBzOgogICAgLSBtZXRhbGxiLmlvCiAgICBhcGlWZXJzaW9uczoKICAgIC0gdjFiZXRhMQogICAgb3BlcmF0aW9uczoKICAgIC0gQ1JFQVRFCiAgICAtIFVQREFURQogICAgcmVzb3VyY2VzOgogICAgLSBiZ3BhZHZlcnRpc2VtZW50cwogIHNpZGVFZmZlY3RzOiBOb25lCi0gYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnM6CiAgLSB2MQogIGNsaWVudENvbmZpZzoKICAgIHNlcnZpY2U6CiAgICAgIG5hbWU6IG1ldGFsbGItd2ViaG9vay1zZXJ2aWNlCiAgICAgIG5hbWVzcGFjZToge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19CiAgICAgIHBhdGg6IC92YWxpZGF0ZS1tZXRhbGxiLWlvLXYxYmV0YTEtY29tbXVuaXR5CiAgZmFpbHVyZVBvbGljeToge3sgLlZhbHVlcy5jcmRzLnZhbGlkYXRpb25GYWlsdXJlUG9saWN5IH19CiAgbmFtZTogY29tbXVuaXR5dmFsaWRhdGlvbndlYmhvb2subWV0YWxsYi5pbwogIHJ1bGVzOgogIC0gYXBpR3JvdXBzOgogICAgLSBtZXRhbGxiLmlvCiAgICBhcGlWZXJzaW9uczoKICAgIC0gdjFiZXRhMQogICAgb3BlcmF0aW9uczoKICAgIC0gQ1JFQVRFCiAgICAtIFVQREFURQogICAgcmVzb3VyY2VzOgogICAgLSBjb21tdW5pdGllcwogIHNpZGVFZmZlY3RzOiBOb25lCi0gYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnM6CiAgLSB2MQogIGNsaWVudENvbmZpZzoKICAgIHNlcnZpY2U6CiAgICAgIG5hbWU6IG1ldGFsbGItd2ViaG9vay1zZXJ2aWNlCiAgICAgIG5hbWVzcGFjZToge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19CiAgICAgIHBhdGg6IC92YWxpZGF0ZS1tZXRhbGxiLWlvLXYxYmV0YTEtYmZkcHJvZmlsZQogIGZhaWx1cmVQb2xpY3k6IHt7IC5WYWx1ZXMuY3Jkcy52YWxpZGF0aW9uRmFpbHVyZVBvbGljeSB9fQogIG5hbWU6IGJmZHByb2ZpbGV2YWxpZGF0aW9ud2ViaG9vay5tZXRhbGxiLmlvCiAgcnVsZXM6CiAgLSBhcGlHcm91cHM6CiAgICAtIG1ldGFsbGIuaW8KICAgIGFwaVZlcnNpb25zOgogICAgLSB2MWJldGExCiAgICBvcGVyYXRpb25zOgogICAgLSBDUkVBVEUKICAgIC0gREVMRVRFCiAgICByZXNvdXJjZXM6CiAgICAtIGJmZHByb2ZpbGVzCiAgc2lkZUVmZmVjdHM6IE5vbmUKLSBhZG1pc3Npb25SZXZpZXdWZXJzaW9uczoKICAtIHYxCiAgY2xpZW50Q29uZmlnOgogICAgc2VydmljZToKICAgICAgbmFtZTogbWV0YWxsYi13ZWJob29rLXNlcnZpY2UKICAgICAgbmFtZXNwYWNlOiB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfX0KICAgICAgcGF0aDogL3ZhbGlkYXRlLW1ldGFsbGItaW8tdjFiZXRhMS1sMmFkdmVydGlzZW1lbnQKICBmYWlsdXJlUG9saWN5OiB7eyAuVmFsdWVzLmNyZHMudmFsaWRhdGlvbkZhaWx1cmVQb2xpY3kgfX0KICBuYW1lOiBsMmFkdmVydGlzZW1lbnR2YWxpZGF0aW9ud2ViaG9vay5tZXRhbGxiLmlvCiAgcnVsZXM6CiAgLSBhcGlHcm91cHM6CiAgICAtIG1ldGFsbGIuaW8KICAgIGFwaVZlcnNpb25zOgogICAgLSB2MWJldGExCiAgICBvcGVyYXRpb25zOgogICAgLSBDUkVBVEUKICAgIC0gVVBEQVRFCiAgICByZXNvdXJjZXM6CiAgICAtIGwyYWR2ZXJ0aXNlbWVudHMKICBzaWRlRWZmZWN0czogTm9uZQotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBtZXRhbGxiLXdlYmhvb2stc2VydmljZQogIG5hbWVzcGFjZToge3sgLlJlbGVhc2UuTmFtZXNwYWNlIHwgcXVvdGUgfX0KICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAibWV0YWxsYi5sYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0Kc3BlYzoKICBwb3J0czoKICAtIHBvcnQ6IDQ0MwogICAgdGFyZ2V0UG9ydDogOTQ0MwogIHNlbGVjdG9yOgogICAge3stIGluY2x1ZGUgIm1ldGFsbGIuc2VsZWN0b3JMYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudDogY29udHJvbGxlcgotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1ldGFsbGItd2ViaG9vay1jZXJ0CiAgbmFtZXNwYWNlOiB7eyAuUmVsZWFzZS5OYW1lc3BhY2UgfCBxdW90ZSB9fQogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJtZXRhbGxiLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQo=
    name: templates/webhooks.yaml
  values:
    controller:
      affinity: {}
      enabled: true
      extraContainers: []
      image:
        pullPolicy: null
        repository: quay.io/metallb/controller
        tag: null
      labels: {}
      livenessProbe:
        enabled: true
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      logLevel: info
      nodeSelector: {}
      podAnnotations: {}
      priorityClassName: ""
      readinessProbe:
        enabled: true
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      runtimeClassName: ""
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount:
        annotations: {}
        create: true
        name: ""
      strategy:
        type: RollingUpdate
      tlsCipherSuites: ""
      tlsMinVersion: VersionTLS12
      tolerations: []
    crds:
      enabled: true
      global: {}
      validationFailurePolicy: Fail
    frrk8s:
      enabled: false
      external: false
      namespace: ""
    fullnameOverride: ""
    imagePullSecrets: []
    loadBalancerClass: ""
    nameOverride: ""
    prometheus:
      controllerMetricsTLSSecret: ""
      metricsPort: 7472
      namespace: ""
      podMonitor:
        additionalLabels: {}
        annotations: {}
        enabled: false
        interval: null
        jobLabel: app.kubernetes.io/name
        metricRelabelings: []
        relabelings: []
      prometheusRule:
        additionalLabels: {}
        addressPoolExhausted:
          enabled: true
          excludePools: ""
          labels:
            severity: critical
        addressPoolUsage:
          enabled: true
          excludePools: ""
          thresholds:
          - labels:
              severity: warning
            percent: 75
          - labels:
              severity: warning
            percent: 85
          - labels:
              severity: critical
            percent: 95
        annotations: {}
        bgpSessionDown:
          enabled: true
          labels:
            severity: critical
        configNotLoaded:
          enabled: true
          labels:
            severity: warning
        enabled: false
        extraAlerts: []
        staleConfig:
          enabled: true
          labels:
            severity: warning
      rbacPrometheus: true
      rbacProxy:
        pullPolicy: null
        repository: gcr.io/kubebuilder/kube-rbac-proxy
        tag: v0.12.0
      scrapeAnnotations: false
      serviceAccount: ""
      serviceMonitor:
        controller:
          additionalLabels: {}
          annotations: {}
          tlsConfig:
            insecureSkipVerify: true
        enabled: false
        interval: null
        jobLabel: app.kubernetes.io/name
        metricRelabelings: []
        relabelings: []
        speaker:
          additionalLabels: {}
          annotations: {}
          tlsConfig:
            insecureSkipVerify: true
      speakerMetricsTLSSecret: ""
    rbac:
      create: true
    speaker:
      affinity: {}
      enabled: true
      excludeInterfaces:
        enabled: true
      extraContainers: []
      frr:
        enabled: true
        image:
          pullPolicy: null
          repository: quay.io/frrouting/frr
          tag: 9.1.0
        metricsPort: 7473
        resources: {}
      frrMetrics:
        resources: {}
      ignoreExcludeLB: false
      image:
        pullPolicy: null
        repository: quay.io/metallb/speaker
        tag: null
      labels: {}
      livenessProbe:
        enabled: true
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      logLevel: info
      memberlist:
        enabled: true
        mlBindAddrOverride: ""
        mlBindPort: 7946
        mlSecretKeyPath: /etc/ml_secret_key
      nodeSelector: {}
      podAnnotations: {}
      priorityClassName: ""
      readinessProbe:
        enabled: true
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      reloader:
        resources: {}
      resources: {}
      runtimeClassName: ""
      securityContext: {}
      serviceAccount:
        annotations: {}
        create: true
        name: ""
      startupProbe:
        enabled: true
        failureThreshold: 30
        periodSeconds: 5
      tolerateMaster: true
      tolerations: []
      updateStrategy:
        type: RollingUpdate
info:
  deleted: ""
  description: Dry run complete
  first_deployed: "2025-10-03T15:09:40.783088+02:00"
  last_deployed: "2025-10-03T15:09:40.783088+02:00"
  notes: |
    MetalLB is now running in the cluster.

    Now you can configure it via its CRs. Please refer to the metallb official docs
    on how to use the CRs.
  status: pending-install
manifest: "---\n# Source: metallb/templates/service-accounts.yaml\napiVersion: v1\nkind:
  ServiceAccount\nmetadata:\n  name: metallb-controller\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n---\n#
  Source: metallb/templates/service-accounts.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n
  \ name: metallb-speaker\n  namespace: \"metallb-system\"\n  labels:\n    helm.sh/chart:
  metallb-0.15.2\n    app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance:
  metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n    app.kubernetes.io/managed-by:
  Helm\n    app.kubernetes.io/component: speaker\n---\n# Source: metallb/templates/webhooks.yaml\napiVersion:
  v1\nkind: Secret\nmetadata:\n  name: metallb-webhook-cert\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\n---\n# Source: metallb/templates/exclude-l2-config.yaml\napiVersion:
  v1\nkind: ConfigMap\nmetadata:\n  name: metallb-excludel2\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\ndata:\n  excludel2.yaml: |\n    announcedInterfacesToExclude:\n
  \   - ^docker.*\n    - ^cbr.*\n    - ^dummy.*\n    - ^virbr.*\n    - ^lxcbr.*\n
  \   - ^veth.*\n    - ^lo$\n    - ^cali.*\n    - ^tunl.*\n    - ^flannel.*\n    -
  ^kube-ipvs.*\n    - ^cni.*\n    - ^nodelocaldns.*\n---\n# Source: metallb/templates/speaker.yaml\n#
  FRR expects to have these files owned by frr:frr on startup.\n# Having them in a
  ConfigMap allows us to modify behaviors: for example enabling more daemons on startup.\napiVersion:
  v1\nkind: ConfigMap\nmetadata:\n  name: metallb-frr-startup\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: speaker\ndata:\n
  \ daemons: |\n    # This file tells the frr package which daemons to start.\n    #\n
  \   # Sample configurations for these daemons can be found in\n    # /usr/share/doc/frr/examples/.\n
  \   #\n    # ATTENTION:\n    #\n    # When activating a daemon for the first time,
  a config file, even if it is\n    # empty, has to be present *and* be owned by the
  user and group \"frr\", else\n    # the daemon will not be started by /etc/init.d/frr.
  The permissions should\n    # be u=rw,g=r,o=.\n    # When using \"vtysh\" such a
  config file is also needed. It should be owned by\n    # group \"frrvty\" and set
  to ug=rw,o= though. Check /etc/pam.d/frr, too.\n    #\n    # The watchfrr and zebra
  daemons are always started.\n    #\n    bgpd=yes\n    ospfd=no\n    ospf6d=no\n
  \   ripd=no\n    ripngd=no\n    isisd=no\n    pimd=no\n    ldpd=no\n    nhrpd=no\n
  \   eigrpd=no\n    babeld=no\n    sharpd=no\n    pbrd=no\n    bfdd=yes\n    fabricd=no\n
  \   vrrpd=no\n\n    #\n    # If this option is set the /etc/init.d/frr script automatically
  loads\n    # the config via \"vtysh -b\" when the servers are started.\n    # Check
  /etc/pam.d/frr if you intend to use \"vtysh\"!\n    #\n    vtysh_enable=yes\n    zebra_options=\"
  \ -A 127.0.0.1 -s 90000000 --limit-fds 100000\"\n    bgpd_options=\"   -A 127.0.0.1
  -p 0 --limit-fds 100000\"\n    ospfd_options=\"  -A 127.0.0.1\"\n    ospf6d_options=\"
  -A ::1\"\n    ripd_options=\"   -A 127.0.0.1\"\n    ripngd_options=\" -A ::1\"\n
  \   isisd_options=\"  -A 127.0.0.1\"\n    pimd_options=\"   -A 127.0.0.1\"\n    ldpd_options=\"
  \  -A 127.0.0.1\"\n    nhrpd_options=\"  -A 127.0.0.1\"\n    eigrpd_options=\" -A
  127.0.0.1\"\n    babeld_options=\" -A 127.0.0.1\"\n    sharpd_options=\" -A 127.0.0.1\"\n
  \   pbrd_options=\"   -A 127.0.0.1\"\n    staticd_options=\"-A 127.0.0.1 --limit-fds
  100000\"\n    bfdd_options=\"   -A 127.0.0.1 --limit-fds 100000\"\n    fabricd_options=\"-A
  127.0.0.1\"\n    vrrpd_options=\"  -A 127.0.0.1\"\n\n    # configuration profile\n
  \   #\n    #frr_profile=\"traditional\"\n    #frr_profile=\"datacenter\"\n\n    #\n
  \   # This is the maximum number of FD's that will be available.\n    # Upon startup
  this is read by the control files and ulimit\n    # is called. Uncomment and use
  a reasonable value for your\n    # setup if you are expecting a large number of
  peers in\n    # say BGP.\n    #MAX_FDS=1024\n\n    # The list of daemons to watch
  is automatically generated by the init script.\n    #watchfrr_options=\"\"\n\n    #
  for debugging purposes, you can specify a \"wrap\" command to start instead\n    #
  of starting the daemon directly, e.g. to use valgrind on ospfd:\n    #   ospfd_wrap=\"/usr/bin/valgrind\"\n
  \   # or you can use \"all_wrap\" for all daemons, e.g. to use perf record:\n    #
  \  all_wrap=\"/usr/bin/perf record --call-graph -\"\n    # the normal daemon command
  is added to this at the end.\n  vtysh.conf: |+\n    service integrated-vtysh-config\n
  \ frr.conf: |+\n    ! This file gets overriden the first time the speaker renders
  a config.\n    ! So anything configured here is only temporary.\n    frr version
  8.0\n    frr defaults traditional\n    hostname Router\n    line vty\n    log file
  /etc/frr/frr.log informational\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion:
  apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n
  \   controller-gen.kubebuilder.io/version: v0.17.2\n  name: bfdprofiles.metallb.io\nspec:\n
  \ group: metallb.io\n  names:\n    kind: BFDProfile\n    listKind: BFDProfileList\n
  \   plural: bfdprofiles\n    singular: bfdprofile\n  scope: Namespaced\n  versions:\n
  \   - additionalPrinterColumns:\n        - jsonPath: .spec.passiveMode\n          name:
  Passive Mode\n          type: boolean\n        - jsonPath: .spec.transmitInterval\n
  \         name: Transmit Interval\n          type: integer\n        - jsonPath:
  .spec.receiveInterval\n          name: Receive Interval\n          type: integer\n
  \       - jsonPath: .spec.detectMultiplier\n          name: Multiplier\n          type:
  integer\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description:
  |-\n            BFDProfile represents the settings of the bfd session that can be\n
  \           optionally associated with a BGP session.\n          properties:\n            apiVersion:\n
  \             description: |-\n                APIVersion defines the versioned
  schema of this representation of an object.\n                Servers should convert
  recognized schemas to the latest internal value, and\n                may reject
  unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: BFDProfileSpec defines the desired
  state of BFDProfile.\n              properties:\n                detectMultiplier:\n
  \                 description: |-\n                    Configures the detection
  multiplier to determine\n                    packet loss. The remote transmission
  interval will be multiplied\n                    by this value to determine the
  connection loss detection timer.\n                  format: int32\n                  maximum:
  255\n                  minimum: 2\n                  type: integer\n                echoInterval:\n
  \                 description: |-\n                    Configures the minimal echo
  receive transmission\n                    interval that this system is capable of
  handling in milliseconds.\n                    Defaults to 50ms\n                  format:
  int32\n                  maximum: 60000\n                  minimum: 10\n                  type:
  integer\n                echoMode:\n                  description: |-\n                    Enables
  or disables the echo transmission mode.\n                    This mode is disabled
  by default, and not supported on multi\n                    hops setups.\n                  type:
  boolean\n                minimumTtl:\n                  description: |-\n                    For
  multi hop sessions only: configure the minimum\n                    expected TTL
  for an incoming BFD control packet.\n                  format: int32\n                  maximum:
  254\n                  minimum: 1\n                  type: integer\n                passiveMode:\n
  \                 description: |-\n                    Mark session as passive:
  a passive session will not\n                    attempt to start the connection
  and will wait for control packets\n                    from peer before it begins
  replying.\n                  type: boolean\n                receiveInterval:\n                  description:
  |-\n                    The minimum interval that this system is capable of\n                    receiving
  control packets in milliseconds.\n                    Defaults to 300ms.\n                  format:
  int32\n                  maximum: 60000\n                  minimum: 10\n                  type:
  integer\n                transmitInterval:\n                  description: |-\n
  \                   The minimum transmission interval (less jitter)\n                    that
  this system wants to use to send BFD control packets in\n                    milliseconds.
  Defaults to 300ms\n                  format: int32\n                  maximum: 60000\n
  \                 minimum: 10\n                  type: integer\n              type:
  object\n            status:\n              description: BFDProfileStatus defines
  the observed state of BFDProfile.\n              type: object\n          type: object\n
  \     served: true\n      storage: true\n      subresources:\n        status: {}\n---\n#
  Source: metallb/charts/crds/templates/crds.yaml\napiVersion: apiextensions.k8s.io/v1\nkind:
  CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version:
  v0.17.2\n  name: bgpadvertisements.metallb.io\nspec:\n  group: metallb.io\n  names:\n
  \   kind: BGPAdvertisement\n    listKind: BGPAdvertisementList\n    plural: bgpadvertisements\n
  \   singular: bgpadvertisement\n  scope: Namespaced\n  versions:\n    - additionalPrinterColumns:\n
  \       - jsonPath: .spec.ipAddressPools\n          name: IPAddressPools\n          type:
  string\n        - jsonPath: .spec.ipAddressPoolSelectors\n          name: IPAddressPool
  Selectors\n          type: string\n        - jsonPath: .spec.peers\n          name:
  Peers\n          type: string\n        - jsonPath: .spec.nodeSelectors\n          name:
  Node Selectors\n          priority: 10\n          type: string\n      name: v1beta1\n
  \     schema:\n        openAPIV3Schema:\n          description: |-\n            BGPAdvertisement
  allows to advertise the IPs coming\n            from the selected IPAddressPools
  via BGP, setting the parameters of the\n            BGP Advertisement.\n          properties:\n
  \           apiVersion:\n              description: |-\n                APIVersion
  defines the versioned schema of this representation of an object.\n                Servers
  should convert recognized schemas to the latest internal value, and\n                may
  reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: BGPAdvertisementSpec defines the desired
  state of BGPAdvertisement.\n              properties:\n                aggregationLength:\n
  \                 default: 32\n                  description: The aggregation-length
  advertisement option lets you “roll up” the /32s into a larger prefix. Defaults
  to 32. Works for IPv4 addresses.\n                  format: int32\n                  minimum:
  1\n                  type: integer\n                aggregationLengthV6:\n                  default:
  128\n                  description: The aggregation-length advertisement option
  lets you “roll up” the /128s into a larger prefix. Defaults to 128. Works for IPv6
  addresses.\n                  format: int32\n                  type: integer\n                communities:\n
  \                 description: |-\n                    The BGP communities to be
  associated with the announcement. Each item can be a standard community of the\n
  \                   form 1234:1234, a large community of the form large:1234:1234:1234
  or the name of an alias defined in the\n                    Community CRD.\n                  items:\n
  \                   type: string\n                  type: array\n                ipAddressPoolSelectors:\n
  \                 description: |-\n                    A selector for the IPAddressPools
  which would get advertised via this advertisement.\n                    If no IPAddressPool
  is selected by this or by the list, the advertisement is applied to all the IPAddressPools.\n
  \                 items:\n                    description: |-\n                      A
  label selector is a label query over a set of resources. The result of matchLabels
  and\n                      matchExpressions are ANDed. An empty label selector matches
  all objects. A null\n                      label selector matches no objects.\n
  \                   properties:\n                      matchExpressions:\n                        description:
  matchExpressions is a list of label selector requirements. The requirements are
  ANDed.\n                        items:\n                          description: |-\n
  \                           A label selector requirement is a selector that contains
  values, a key, and an operator that\n                            relates the key
  and values.\n                          properties:\n                            key:\n
  \                             description: key is the label key that the selector
  applies to.\n                              type: string\n                            operator:\n
  \                             description: |-\n                                operator
  represents a key's relationship to a set of values.\n                                Valid
  operators are In, NotIn, Exists and DoesNotExist.\n                              type:
  string\n                            values:\n                              description:
  |-\n                                values is an array of string values. If the
  operator is In or NotIn,\n                                the values array must
  be non-empty. If the operator is Exists or DoesNotExist,\n                                the
  values array must be empty. This array is replaced during a strategic\n                                merge
  patch.\n                              items:\n                                type:
  string\n                              type: array\n                              x-kubernetes-list-type:
  atomic\n                          required:\n                            - key\n
  \                           - operator\n                          type: object\n
  \                       type: array\n                        x-kubernetes-list-type:
  atomic\n                      matchLabels:\n                        additionalProperties:\n
  \                         type: string\n                        description: |-\n
  \                         matchLabels is a map of {key,value} pairs. A single {key,value}
  in the matchLabels\n                          map is equivalent to an element of
  matchExpressions, whose key field is \"key\", the\n                          operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                       type: object\n                    type: object\n                    x-kubernetes-map-type:
  atomic\n                  type: array\n                ipAddressPools:\n                  description:
  The list of IPAddressPools to advertise via this advertisement, selected by name.\n
  \                 items:\n                    type: string\n                  type:
  array\n                localPref:\n                  description: |-\n                    The
  BGP LOCAL_PREF attribute which is used by BGP best path algorithm,\n                    Path
  with higher localpref is preferred over one with lower localpref.\n                  format:
  int32\n                  type: integer\n                nodeSelectors:\n                  description:
  NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer
  IP. When empty, all the nodes having  are announced as next hops.\n                  items:\n
  \                   description: |-\n                      A label selector is a
  label query over a set of resources. The result of matchLabels and\n                      matchExpressions
  are ANDed. An empty label selector matches all objects. A null\n                      label
  selector matches no objects.\n                    properties:\n                      matchExpressions:\n
  \                       description: matchExpressions is a list of label selector
  requirements. The requirements are ANDed.\n                        items:\n                          description:
  |-\n                            A label selector requirement is a selector that
  contains values, a key, and an operator that\n                            relates
  the key and values.\n                          properties:\n                            key:\n
  \                             description: key is the label key that the selector
  applies to.\n                              type: string\n                            operator:\n
  \                             description: |-\n                                operator
  represents a key's relationship to a set of values.\n                                Valid
  operators are In, NotIn, Exists and DoesNotExist.\n                              type:
  string\n                            values:\n                              description:
  |-\n                                values is an array of string values. If the
  operator is In or NotIn,\n                                the values array must
  be non-empty. If the operator is Exists or DoesNotExist,\n                                the
  values array must be empty. This array is replaced during a strategic\n                                merge
  patch.\n                              items:\n                                type:
  string\n                              type: array\n                              x-kubernetes-list-type:
  atomic\n                          required:\n                            - key\n
  \                           - operator\n                          type: object\n
  \                       type: array\n                        x-kubernetes-list-type:
  atomic\n                      matchLabels:\n                        additionalProperties:\n
  \                         type: string\n                        description: |-\n
  \                         matchLabels is a map of {key,value} pairs. A single {key,value}
  in the matchLabels\n                          map is equivalent to an element of
  matchExpressions, whose key field is \"key\", the\n                          operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                       type: object\n                    type: object\n                    x-kubernetes-map-type:
  atomic\n                  type: array\n                peers:\n                  description:
  |-\n                    Peers limits the bgppeer to advertise the ips of the selected
  pools to.\n                    When empty, the loadbalancer IP is announced to all
  the BGPPeers configured.\n                  items:\n                    type: string\n
  \                 type: array\n              type: object\n            status:\n
  \             description: BGPAdvertisementStatus defines the observed state of
  BGPAdvertisement.\n              type: object\n          type: object\n      served:
  true\n      storage: true\n      subresources:\n        status: {}\n---\n# Source:
  metallb/charts/crds/templates/crds.yaml\napiVersion: apiextensions.k8s.io/v1\nkind:
  CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version:
  v0.17.2\n  name: bgppeers.metallb.io\nspec:\n  conversion:\n    strategy: Webhook\n
  \   webhook:\n      clientConfig:\n        service:\n          name: metallb-webhook-service\n
  \         namespace: metallb-system\n          path: /convert\n      conversionReviewVersions:\n
  \       - v1beta1\n        - v1beta2\n  group: metallb.io\n  names:\n    kind: BGPPeer\n
  \   listKind: BGPPeerList\n    plural: bgppeers\n    singular: bgppeer\n  scope:
  Namespaced\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .spec.peerAddress\n
  \         name: Address\n          type: string\n        - jsonPath: .spec.peerASN\n
  \         name: ASN\n          type: string\n        - jsonPath: .spec.bfdProfile\n
  \         name: BFD Profile\n          type: string\n        - jsonPath: .spec.ebgpMultiHop\n
  \         name: Multi Hops\n          type: string\n      deprecated: true\n      deprecationWarning:
  v1beta1 is deprecated, please use v1beta2\n      name: v1beta1\n      schema:\n
  \       openAPIV3Schema:\n          description: BGPPeer is the Schema for the peers
  API.\n          properties:\n            apiVersion:\n              description:
  |-\n                APIVersion defines the versioned schema of this representation
  of an object.\n                Servers should convert recognized schemas to the
  latest internal value, and\n                may reject unrecognized values.\n                More
  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: BGPPeerSpec defines the desired state
  of Peer.\n              properties:\n                bfdProfile:\n                  type:
  string\n                ebgpMultiHop:\n                  description: EBGP peer
  is multi-hops away\n                  type: boolean\n                holdTime:\n
  \                 description: Requested BGP hold time, per RFC4271.\n                  type:
  string\n                keepaliveTime:\n                  description: Requested
  BGP keepalive time, per RFC4271.\n                  type: string\n                myASN:\n
  \                 description: AS number to use for the local end of the session.\n
  \                 format: int32\n                  maximum: 4294967295\n                  minimum:
  0\n                  type: integer\n                nodeSelectors:\n                  description:
  |-\n                    Only connect to this peer on nodes that match one of these\n
  \                   selectors.\n                  items:\n                    properties:\n
  \                     matchExpressions:\n                        items:\n                          properties:\n
  \                           key:\n                              type: string\n                            operator:\n
  \                             type: string\n                            values:\n
  \                             items:\n                                type: string\n
  \                             minItems: 1\n                              type: array\n
  \                         required:\n                            - key\n                            -
  operator\n                            - values\n                          type:
  object\n                        type: array\n                      matchLabels:\n
  \                       additionalProperties:\n                          type: string\n
  \                       type: object\n                    type: object\n                  type:
  array\n                password:\n                  description: Authentication
  password for routers enforcing TCP MD5 authenticated sessions\n                  type:
  string\n                peerASN:\n                  description: AS number to expect
  from the remote end of the session.\n                  format: int32\n                  maximum:
  4294967295\n                  minimum: 0\n                  type: integer\n                peerAddress:\n
  \                 description: Address to dial when establishing the session.\n
  \                 type: string\n                peerPort:\n                  description:
  Port to dial when establishing the session.\n                  maximum: 16384\n
  \                 minimum: 0\n                  type: integer\n                routerID:\n
  \                 description: BGP router ID to advertise to the peer\n                  type:
  string\n                sourceAddress:\n                  description: Source address
  to use when establishing the session.\n                  type: string\n              required:\n
  \               - myASN\n                - peerASN\n                - peerAddress\n
  \             type: object\n            status:\n              description: BGPPeerStatus
  defines the observed state of Peer.\n              type: object\n          type:
  object\n      served: true\n      storage: false\n      subresources:\n        status:
  {}\n    - additionalPrinterColumns:\n        - jsonPath: .spec.peerAddress\n          name:
  Address\n          type: string\n        - jsonPath: .spec.peerASN\n          name:
  ASN\n          type: string\n        - jsonPath: .spec.bfdProfile\n          name:
  BFD Profile\n          type: string\n        - jsonPath: .spec.ebgpMultiHop\n          name:
  Multi Hops\n          type: string\n      name: v1beta2\n      schema:\n        openAPIV3Schema:\n
  \         description: BGPPeer is the Schema for the peers API.\n          properties:\n
  \           apiVersion:\n              description: |-\n                APIVersion
  defines the versioned schema of this representation of an object.\n                Servers
  should convert recognized schemas to the latest internal value, and\n                may
  reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: BGPPeerSpec defines the desired state
  of Peer.\n              properties:\n                bfdProfile:\n                  description:
  The name of the BFD Profile to be used for the BFD session associated to the BGP
  session. If not set, the BFD session won't be set up.\n                  type: string\n
  \               connectTime:\n                  description: Requested BGP connect
  time, controls how long BGP waits between connection attempts to a neighbor.\n                  type:
  string\n                  x-kubernetes-validations:\n                    - message:
  connect time should be between 1 seconds to 65535\n                      rule: duration(self).getSeconds()
  >= 1 && duration(self).getSeconds() <= 65535\n                    - message: connect
  time should contain a whole number of seconds\n                      rule: duration(self).getMilliseconds()
  % 1000 == 0\n                disableMP:\n                  default: false\n                  description:
  |-\n                    To set if we want to disable MP BGP that will separate IPv4
  and IPv6 route exchanges into distinct BGP sessions.\n                    Deprecated:
  DisableMP is deprecated in favor of dualStackAddressFamily.\n                  type:
  boolean\n                dualStackAddressFamily:\n                  default: false\n
  \                 description: |-\n                    To set if we want to enable
  the neighbor not only for the ipfamily related to its session,\n                    but
  also the other one. This allows to advertise/receive IPv4 prefixes over IPv6 sessions
  and vice versa.\n                  type: boolean\n                dynamicASN:\n
  \                 description: |-\n                    DynamicASN detects the AS
  number to use for the remote end of the session\n                    without explicitly
  setting it via the ASN field. Limited to:\n                    internal - if the
  neighbor's ASN is different than MyASN connection is denied.\n                    external
  - if the neighbor's ASN is the same as MyASN the connection is denied.\n                    ASN
  and DynamicASN are mutually exclusive and one of them must be specified.\n                  enum:\n
  \                   - internal\n                    - external\n                  type:
  string\n                ebgpMultiHop:\n                  description: To set if
  the BGPPeer is multi-hops away. Needed for FRR mode only.\n                  type:
  boolean\n                enableGracefulRestart:\n                  description:
  |-\n                    EnableGracefulRestart allows BGP peer to continue to forward
  data packets\n                    along known routes while the routing protocol
  information is being\n                    restored. This field is immutable because
  it requires restart of the BGP\n                    session. Supported for FRR mode
  only.\n                  type: boolean\n                  x-kubernetes-validations:\n
  \                   - message: EnableGracefulRestart cannot be changed after creation\n
  \                     rule: self == oldSelf\n                holdTime:\n                  description:
  Requested BGP hold time, per RFC4271.\n                  type: string\n                interface:\n
  \                 description: |-\n                    Interface is the node interface
  over which the unnumbered BGP peering will\n                    be established.
  No API validation takes place as that string value\n                    represents
  an interface name on the host and if user provides an invalid\n                    value,
  only the actual BGP session will not be established.\n                    Address
  and Interface are mutually exclusive and one of them must be specified.\n                  type:
  string\n                keepaliveTime:\n                  description: Requested
  BGP keepalive time, per RFC4271.\n                  type: string\n                myASN:\n
  \                 description: AS number to use for the local end of the session.\n
  \                 format: int32\n                  maximum: 4294967295\n                  minimum:
  0\n                  type: integer\n                nodeSelectors:\n                  description:
  |-\n                    Only connect to this peer on nodes that match one of these\n
  \                   selectors.\n                  items:\n                    description:
  |-\n                      A label selector is a label query over a set of resources.
  The result of matchLabels and\n                      matchExpressions are ANDed.
  An empty label selector matches all objects. A null\n                      label
  selector matches no objects.\n                    properties:\n                      matchExpressions:\n
  \                       description: matchExpressions is a list of label selector
  requirements. The requirements are ANDed.\n                        items:\n                          description:
  |-\n                            A label selector requirement is a selector that
  contains values, a key, and an operator that\n                            relates
  the key and values.\n                          properties:\n                            key:\n
  \                             description: key is the label key that the selector
  applies to.\n                              type: string\n                            operator:\n
  \                             description: |-\n                                operator
  represents a key's relationship to a set of values.\n                                Valid
  operators are In, NotIn, Exists and DoesNotExist.\n                              type:
  string\n                            values:\n                              description:
  |-\n                                values is an array of string values. If the
  operator is In or NotIn,\n                                the values array must
  be non-empty. If the operator is Exists or DoesNotExist,\n                                the
  values array must be empty. This array is replaced during a strategic\n                                merge
  patch.\n                              items:\n                                type:
  string\n                              type: array\n                              x-kubernetes-list-type:
  atomic\n                          required:\n                            - key\n
  \                           - operator\n                          type: object\n
  \                       type: array\n                        x-kubernetes-list-type:
  atomic\n                      matchLabels:\n                        additionalProperties:\n
  \                         type: string\n                        description: |-\n
  \                         matchLabels is a map of {key,value} pairs. A single {key,value}
  in the matchLabels\n                          map is equivalent to an element of
  matchExpressions, whose key field is \"key\", the\n                          operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                       type: object\n                    type: object\n                    x-kubernetes-map-type:
  atomic\n                  type: array\n                password:\n                  description:
  Authentication password for routers enforcing TCP MD5 authenticated sessions\n                  type:
  string\n                passwordSecret:\n                  description: |-\n                    passwordSecret
  is name of the authentication secret for BGP Peer.\n                    the secret
  must be of type \"kubernetes.io/basic-auth\", and created in the\n                    same
  namespace as the MetalLB deployment. The password is stored in the\n                    secret
  as the key \"password\".\n                  properties:\n                    name:\n
  \                     description: name is unique within a namespace to reference
  a secret resource.\n                      type: string\n                    namespace:\n
  \                     description: namespace defines the space within which the
  secret name must be unique.\n                      type: string\n                  type:
  object\n                  x-kubernetes-map-type: atomic\n                peerASN:\n
  \                 description: |-\n                    AS number to expect from
  the remote end of the session.\n                    ASN and DynamicASN are mutually
  exclusive and one of them must be specified.\n                  format: int32\n
  \                 maximum: 4294967295\n                  minimum: 0\n                  type:
  integer\n                peerAddress:\n                  description: Address to
  dial when establishing the session.\n                  type: string\n                peerPort:\n
  \                 default: 179\n                  description: Port to dial when
  establishing the session.\n                  maximum: 16384\n                  minimum:
  1\n                  type: integer\n                routerID:\n                  description:
  BGP router ID to advertise to the peer\n                  type: string\n                sourceAddress:\n
  \                 description: Source address to use when establishing the session.\n
  \                 type: string\n                vrf:\n                  description:
  |-\n                    To set if we want to peer with the BGPPeer using an interface
  belonging to\n                    a host vrf\n                  type: string\n              required:\n
  \               - myASN\n              type: object\n            status:\n              description:
  BGPPeerStatus defines the observed state of Peer.\n              type: object\n
  \         type: object\n      served: true\n      storage: true\n      subresources:\n
  \       status: {}\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion:
  apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n
  \   controller-gen.kubebuilder.io/version: v0.17.2\n  name: communities.metallb.io\nspec:\n
  \ group: metallb.io\n  names:\n    kind: Community\n    listKind: CommunityList\n
  \   plural: communities\n    singular: community\n  scope: Namespaced\n  versions:\n
  \   - name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description:
  |-\n            Community is a collection of aliases for communities.\n            Users
  can define named aliases to be used in the BGPPeer CRD.\n          properties:\n
  \           apiVersion:\n              description: |-\n                APIVersion
  defines the versioned schema of this representation of an object.\n                Servers
  should convert recognized schemas to the latest internal value, and\n                may
  reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: CommunitySpec defines the desired
  state of Community.\n              properties:\n                communities:\n                  items:\n
  \                   properties:\n                      name:\n                        description:
  The name of the alias for the community.\n                        type: string\n
  \                     value:\n                        description: |-\n                          The
  BGP community value corresponding to the given name. Can be a standard community
  of the form 1234:1234\n                          or a large community of the form
  large:1234:1234:1234.\n                        type: string\n                    type:
  object\n                  type: array\n              type: object\n            status:\n
  \             description: CommunityStatus defines the observed state of Community.\n
  \             type: object\n          type: object\n      served: true\n      storage:
  true\n      subresources:\n        status: {}\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion:
  apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n
  \   controller-gen.kubebuilder.io/version: v0.17.2\n  name: ipaddresspools.metallb.io\nspec:\n
  \ group: metallb.io\n  names:\n    kind: IPAddressPool\n    listKind: IPAddressPoolList\n
  \   plural: ipaddresspools\n    singular: ipaddresspool\n  scope: Namespaced\n  versions:\n
  \   - additionalPrinterColumns:\n        - jsonPath: .spec.autoAssign\n          name:
  Auto Assign\n          type: boolean\n        - jsonPath: .spec.avoidBuggyIPs\n
  \         name: Avoid Buggy IPs\n          type: boolean\n        - jsonPath: .spec.addresses\n
  \         name: Addresses\n          type: string\n      name: v1beta1\n      schema:\n
  \       openAPIV3Schema:\n          description: |-\n            IPAddressPool represents
  a pool of IP addresses that can be allocated\n            to LoadBalancer services.\n
  \         properties:\n            apiVersion:\n              description: |-\n
  \               APIVersion defines the versioned schema of this representation of
  an object.\n                Servers should convert recognized schemas to the latest
  internal value, and\n                may reject unrecognized values.\n                More
  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: IPAddressPoolSpec defines the desired
  state of IPAddressPool.\n              properties:\n                addresses:\n
  \                 description: |-\n                    A list of IP address ranges
  over which MetalLB has authority.\n                    You can list multiple ranges
  in a single pool, they will all share the\n                    same settings. Each
  range can be either a CIDR prefix, or an explicit\n                    start-end
  range of IPs.\n                  items:\n                    type: string\n                  type:
  array\n                autoAssign:\n                  default: true\n                  description:
  |-\n                    AutoAssign flag used to prevent MetallB from automatic allocation\n
  \                   for a pool.\n                  type: boolean\n                avoidBuggyIPs:\n
  \                 default: false\n                  description: |-\n                    AvoidBuggyIPs
  prevents addresses ending with .0 and .255\n                    to be used by a
  pool.\n                  type: boolean\n                serviceAllocation:\n                  description:
  |-\n                    AllocateTo makes ip pool allocation to specific namespace
  and/or service.\n                    The controller will use the pool with lowest
  value of priority in case of\n                    multiple matches. A pool with
  no priority set will be used only if the\n                    pools with priority
  can't be used. If multiple matching IPAddressPools are\n                    available
  it will check for the availability of IPs sorting the matching\n                    IPAddressPools
  by priority, starting from the highest to the lowest. If\n                    multiple
  IPAddressPools have the same priority, choice will be random.\n                  properties:\n
  \                   namespaceSelectors:\n                      description: |-\n
  \                       NamespaceSelectors list of label selectors to select namespace(s)
  for ip pool,\n                        an alternative to using namespace list.\n
  \                     items:\n                        description: |-\n                          A
  label selector is a label query over a set of resources. The result of matchLabels
  and\n                          matchExpressions are ANDed. An empty label selector
  matches all objects. A null\n                          label selector matches no
  objects.\n                        properties:\n                          matchExpressions:\n
  \                           description: matchExpressions is a list of label selector
  requirements. The requirements are ANDed.\n                            items:\n
  \                             description: |-\n                                A
  label selector requirement is a selector that contains values, a key, and an operator
  that\n                                relates the key and values.\n                              properties:\n
  \                               key:\n                                  description:
  key is the label key that the selector applies to.\n                                  type:
  string\n                                operator:\n                                  description:
  |-\n                                    operator represents a key's relationship
  to a set of values.\n                                    Valid operators are In,
  NotIn, Exists and DoesNotExist.\n                                  type: string\n
  \                               values:\n                                  description:
  |-\n                                    values is an array of string values. If
  the operator is In or NotIn,\n                                    the values array
  must be non-empty. If the operator is Exists or DoesNotExist,\n                                    the
  values array must be empty. This array is replaced during a strategic\n                                    merge
  patch.\n                                  items:\n                                    type:
  string\n                                  type: array\n                                  x-kubernetes-list-type:
  atomic\n                              required:\n                                -
  key\n                                - operator\n                              type:
  object\n                            type: array\n                            x-kubernetes-list-type:
  atomic\n                          matchLabels:\n                            additionalProperties:\n
  \                             type: string\n                            description:
  |-\n                              matchLabels is a map of {key,value} pairs. A single
  {key,value} in the matchLabels\n                              map is equivalent
  to an element of matchExpressions, whose key field is \"key\", the\n                              operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                           type: object\n                        type: object\n
  \                       x-kubernetes-map-type: atomic\n                      type:
  array\n                    namespaces:\n                      description: Namespaces
  list of namespace(s) on which ip pool can be attached.\n                      items:\n
  \                       type: string\n                      type: array\n                    priority:\n
  \                     description: Priority priority given for ip pool while ip
  allocation on a service.\n                      type: integer\n                    serviceSelectors:\n
  \                     description: |-\n                        ServiceSelectors
  list of label selector to select service(s) for which ip pool\n                        can
  be used for ip allocation.\n                      items:\n                        description:
  |-\n                          A label selector is a label query over a set of resources.
  The result of matchLabels and\n                          matchExpressions are ANDed.
  An empty label selector matches all objects. A null\n                          label
  selector matches no objects.\n                        properties:\n                          matchExpressions:\n
  \                           description: matchExpressions is a list of label selector
  requirements. The requirements are ANDed.\n                            items:\n
  \                             description: |-\n                                A
  label selector requirement is a selector that contains values, a key, and an operator
  that\n                                relates the key and values.\n                              properties:\n
  \                               key:\n                                  description:
  key is the label key that the selector applies to.\n                                  type:
  string\n                                operator:\n                                  description:
  |-\n                                    operator represents a key's relationship
  to a set of values.\n                                    Valid operators are In,
  NotIn, Exists and DoesNotExist.\n                                  type: string\n
  \                               values:\n                                  description:
  |-\n                                    values is an array of string values. If
  the operator is In or NotIn,\n                                    the values array
  must be non-empty. If the operator is Exists or DoesNotExist,\n                                    the
  values array must be empty. This array is replaced during a strategic\n                                    merge
  patch.\n                                  items:\n                                    type:
  string\n                                  type: array\n                                  x-kubernetes-list-type:
  atomic\n                              required:\n                                -
  key\n                                - operator\n                              type:
  object\n                            type: array\n                            x-kubernetes-list-type:
  atomic\n                          matchLabels:\n                            additionalProperties:\n
  \                             type: string\n                            description:
  |-\n                              matchLabels is a map of {key,value} pairs. A single
  {key,value} in the matchLabels\n                              map is equivalent
  to an element of matchExpressions, whose key field is \"key\", the\n                              operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                           type: object\n                        type: object\n
  \                       x-kubernetes-map-type: atomic\n                      type:
  array\n                  type: object\n              required:\n                -
  addresses\n              type: object\n            status:\n              description:
  IPAddressPoolStatus defines the observed state of IPAddressPool.\n              properties:\n
  \               assignedIPv4:\n                  description: AssignedIPv4 is the
  number of assigned IPv4 addresses.\n                  format: int64\n                  type:
  integer\n                assignedIPv6:\n                  description: AssignedIPv6
  is the number of assigned IPv6 addresses.\n                  format: int64\n                  type:
  integer\n                availableIPv4:\n                  description: AvailableIPv4
  is the number of available IPv4 addresses.\n                  format: int64\n                  type:
  integer\n                availableIPv6:\n                  description: AvailableIPv6
  is the number of available IPv6 addresses.\n                  format: int64\n                  type:
  integer\n              required:\n                - assignedIPv4\n                -
  assignedIPv6\n                - availableIPv4\n                - availableIPv6\n
  \             type: object\n          required:\n            - spec\n          type:
  object\n      served: true\n      storage: true\n      subresources:\n        status:
  {}\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion: apiextensions.k8s.io/v1\nkind:
  CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version:
  v0.17.2\n  name: l2advertisements.metallb.io\nspec:\n  group: metallb.io\n  names:\n
  \   kind: L2Advertisement\n    listKind: L2AdvertisementList\n    plural: l2advertisements\n
  \   singular: l2advertisement\n  scope: Namespaced\n  versions:\n    - additionalPrinterColumns:\n
  \       - jsonPath: .spec.ipAddressPools\n          name: IPAddressPools\n          type:
  string\n        - jsonPath: .spec.ipAddressPoolSelectors\n          name: IPAddressPool
  Selectors\n          type: string\n        - jsonPath: .spec.interfaces\n          name:
  Interfaces\n          type: string\n        - jsonPath: .spec.nodeSelectors\n          name:
  Node Selectors\n          priority: 10\n          type: string\n      name: v1beta1\n
  \     schema:\n        openAPIV3Schema:\n          description: |-\n            L2Advertisement
  allows to advertise the LoadBalancer IPs provided\n            by the selected pools
  via L2.\n          properties:\n            apiVersion:\n              description:
  |-\n                APIVersion defines the versioned schema of this representation
  of an object.\n                Servers should convert recognized schemas to the
  latest internal value, and\n                may reject unrecognized values.\n                More
  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: L2AdvertisementSpec defines the desired
  state of L2Advertisement.\n              properties:\n                interfaces:\n
  \                 description: |-\n                    A list of interfaces to announce
  from. The LB IP will be announced only from these interfaces.\n                    If
  the field is not set, we advertise from all the interfaces on the host.\n                  items:\n
  \                   type: string\n                  type: array\n                ipAddressPoolSelectors:\n
  \                 description: |-\n                    A selector for the IPAddressPools
  which would get advertised via this advertisement.\n                    If no IPAddressPool
  is selected by this or by the list, the advertisement is applied to all the IPAddressPools.\n
  \                 items:\n                    description: |-\n                      A
  label selector is a label query over a set of resources. The result of matchLabels
  and\n                      matchExpressions are ANDed. An empty label selector matches
  all objects. A null\n                      label selector matches no objects.\n
  \                   properties:\n                      matchExpressions:\n                        description:
  matchExpressions is a list of label selector requirements. The requirements are
  ANDed.\n                        items:\n                          description: |-\n
  \                           A label selector requirement is a selector that contains
  values, a key, and an operator that\n                            relates the key
  and values.\n                          properties:\n                            key:\n
  \                             description: key is the label key that the selector
  applies to.\n                              type: string\n                            operator:\n
  \                             description: |-\n                                operator
  represents a key's relationship to a set of values.\n                                Valid
  operators are In, NotIn, Exists and DoesNotExist.\n                              type:
  string\n                            values:\n                              description:
  |-\n                                values is an array of string values. If the
  operator is In or NotIn,\n                                the values array must
  be non-empty. If the operator is Exists or DoesNotExist,\n                                the
  values array must be empty. This array is replaced during a strategic\n                                merge
  patch.\n                              items:\n                                type:
  string\n                              type: array\n                              x-kubernetes-list-type:
  atomic\n                          required:\n                            - key\n
  \                           - operator\n                          type: object\n
  \                       type: array\n                        x-kubernetes-list-type:
  atomic\n                      matchLabels:\n                        additionalProperties:\n
  \                         type: string\n                        description: |-\n
  \                         matchLabels is a map of {key,value} pairs. A single {key,value}
  in the matchLabels\n                          map is equivalent to an element of
  matchExpressions, whose key field is \"key\", the\n                          operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                       type: object\n                    type: object\n                    x-kubernetes-map-type:
  atomic\n                  type: array\n                ipAddressPools:\n                  description:
  The list of IPAddressPools to advertise via this advertisement, selected by name.\n
  \                 items:\n                    type: string\n                  type:
  array\n                nodeSelectors:\n                  description: NodeSelectors
  allows to limit the nodes to announce as next hops for the LoadBalancer IP. When
  empty, all the nodes having  are announced as next hops.\n                  items:\n
  \                   description: |-\n                      A label selector is a
  label query over a set of resources. The result of matchLabels and\n                      matchExpressions
  are ANDed. An empty label selector matches all objects. A null\n                      label
  selector matches no objects.\n                    properties:\n                      matchExpressions:\n
  \                       description: matchExpressions is a list of label selector
  requirements. The requirements are ANDed.\n                        items:\n                          description:
  |-\n                            A label selector requirement is a selector that
  contains values, a key, and an operator that\n                            relates
  the key and values.\n                          properties:\n                            key:\n
  \                             description: key is the label key that the selector
  applies to.\n                              type: string\n                            operator:\n
  \                             description: |-\n                                operator
  represents a key's relationship to a set of values.\n                                Valid
  operators are In, NotIn, Exists and DoesNotExist.\n                              type:
  string\n                            values:\n                              description:
  |-\n                                values is an array of string values. If the
  operator is In or NotIn,\n                                the values array must
  be non-empty. If the operator is Exists or DoesNotExist,\n                                the
  values array must be empty. This array is replaced during a strategic\n                                merge
  patch.\n                              items:\n                                type:
  string\n                              type: array\n                              x-kubernetes-list-type:
  atomic\n                          required:\n                            - key\n
  \                           - operator\n                          type: object\n
  \                       type: array\n                        x-kubernetes-list-type:
  atomic\n                      matchLabels:\n                        additionalProperties:\n
  \                         type: string\n                        description: |-\n
  \                         matchLabels is a map of {key,value} pairs. A single {key,value}
  in the matchLabels\n                          map is equivalent to an element of
  matchExpressions, whose key field is \"key\", the\n                          operator
  is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n
  \                       type: object\n                    type: object\n                    x-kubernetes-map-type:
  atomic\n                  type: array\n              type: object\n            status:\n
  \             description: L2AdvertisementStatus defines the observed state of L2Advertisement.\n
  \             type: object\n          type: object\n      served: true\n      storage:
  true\n      subresources:\n        status: {}\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion:
  apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n
  \   controller-gen.kubebuilder.io/version: v0.17.2\n  name: servicebgpstatuses.metallb.io\nspec:\n
  \ group: metallb.io\n  names:\n    kind: ServiceBGPStatus\n    listKind: ServiceBGPStatusList\n
  \   plural: servicebgpstatuses\n    singular: servicebgpstatus\n  scope: Namespaced\n
  \ versions:\n    - additionalPrinterColumns:\n        - jsonPath: .status.node\n
  \         name: Node\n          type: string\n        - jsonPath: .status.serviceName\n
  \         name: Service Name\n          type: string\n        - jsonPath: .status.serviceNamespace\n
  \         name: Service Namespace\n          type: string\n      name: v1beta1\n
  \     schema:\n        openAPIV3Schema:\n          description: ServiceBGPStatus
  exposes the BGP peers a service is configured to be advertised to, per relevant
  node.\n          properties:\n            apiVersion:\n              description:
  |-\n                APIVersion defines the versioned schema of this representation
  of an object.\n                Servers should convert recognized schemas to the
  latest internal value, and\n                may reject unrecognized values.\n                More
  info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: ServiceBGPStatusSpec defines the desired
  state of ServiceBGPStatus.\n              type: object\n            status:\n              description:
  MetalLBServiceBGPStatus defines the observed state of ServiceBGPStatus.\n              properties:\n
  \               node:\n                  description: Node indicates the node announcing
  the service.\n                  type: string\n                  x-kubernetes-validations:\n
  \                   - message: Value is immutable\n                      rule: self
  == oldSelf\n                peers:\n                  description: |-\n                    Peers
  indicate the BGP peers for which the service is configured to be advertised to.\n
  \                   The service being actually advertised to a given peer depends
  on the session state and is not indicated here.\n                  items:\n                    type:
  string\n                  type: array\n                serviceName:\n                  description:
  ServiceName indicates the service this status represents.\n                  type:
  string\n                  x-kubernetes-validations:\n                    - message:
  Value is immutable\n                      rule: self == oldSelf\n                serviceNamespace:\n
  \                 description: ServiceNamespace indicates the namespace of the service.\n
  \                 type: string\n                  x-kubernetes-validations:\n                    -
  message: Value is immutable\n                      rule: self == oldSelf\n              type:
  object\n          type: object\n      served: true\n      storage: true\n      subresources:\n
  \       status: {}\n---\n# Source: metallb/charts/crds/templates/crds.yaml\napiVersion:
  apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n
  \   controller-gen.kubebuilder.io/version: v0.17.2\n  name: servicel2statuses.metallb.io\nspec:\n
  \ group: metallb.io\n  names:\n    kind: ServiceL2Status\n    listKind: ServiceL2StatusList\n
  \   plural: servicel2statuses\n    singular: servicel2status\n  scope: Namespaced\n
  \ versions:\n    - additionalPrinterColumns:\n        - jsonPath: .status.node\n
  \         name: Allocated Node\n          type: string\n        - jsonPath: .status.serviceName\n
  \         name: Service Name\n          type: string\n        - jsonPath: .status.serviceNamespace\n
  \         name: Service Namespace\n          type: string\n      name: v1beta1\n
  \     schema:\n        openAPIV3Schema:\n          description: ServiceL2Status
  reveals the actual traffic status of loadbalancer services in layer2 mode.\n          properties:\n
  \           apiVersion:\n              description: |-\n                APIVersion
  defines the versioned schema of this representation of an object.\n                Servers
  should convert recognized schemas to the latest internal value, and\n                may
  reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n
  \             type: string\n            kind:\n              description: |-\n                Kind
  is a string value representing the REST resource this object represents.\n                Servers
  may infer this from the endpoint the client submits requests to.\n                Cannot
  be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n
  \             type: string\n            metadata:\n              type: object\n
  \           spec:\n              description: ServiceL2StatusSpec defines the desired
  state of ServiceL2Status.\n              type: object\n            status:\n              description:
  MetalLBServiceL2Status defines the observed state of ServiceL2Status.\n              properties:\n
  \               interfaces:\n                  description: Interfaces indicates
  the interfaces that receive the directed traffic\n                  items:\n                    description:
  InterfaceInfo defines interface info of layer2 announcement.\n                    properties:\n
  \                     name:\n                        description: Name the name
  of network interface card\n                        type: string\n                    type:
  object\n                  type: array\n                node:\n                  description:
  Node indicates the node that receives the directed traffic\n                  type:
  string\n                  x-kubernetes-validations:\n                    - message:
  Value is immutable\n                      rule: self == oldSelf\n                serviceName:\n
  \                 description: ServiceName indicates the service this status represents\n
  \                 type: string\n                  x-kubernetes-validations:\n                    -
  message: Value is immutable\n                      rule: self == oldSelf\n                serviceNamespace:\n
  \                 description: ServiceNamespace indicates the namespace of the service\n
  \                 type: string\n                  x-kubernetes-validations:\n                    -
  message: Value is immutable\n                      rule: self == oldSelf\n              type:
  object\n          type: object\n      served: true\n      storage: true\n      subresources:\n
  \       status: {}\n---\n# Source: metallb/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind:
  ClusterRole\nmetadata:\n  name: metallb:controller\n  labels:\n    helm.sh/chart:
  metallb-0.15.2\n    app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance:
  metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n    app.kubernetes.io/managed-by:
  Helm\nrules:\n- apiGroups: [\"\"]\n  resources: [\"services\", \"namespaces\"]\n
  \ verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"nodes\"]\n
  \ verbs: [\"list\"]\n- apiGroups: [\"\"]\n  resources: [\"services/status\"]\n  verbs:
  [\"update\"]\n- apiGroups: [\"\"]\n  resources: [\"events\"]\n  verbs: [\"create\",
  \"patch\"]\n- apiGroups: [\"admissionregistration.k8s.io\"]\n  resources: [\"validatingwebhookconfigurations\"]\n
  \ resourceNames: [\"metallb-webhook-configuration\"]\n  verbs: [\"create\", \"delete\",
  \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n- apiGroups: [\"admissionregistration.k8s.io\"]\n
  \ resources: [\"validatingwebhookconfigurations\"]\n  verbs: [\"list\", \"watch\"]\n-
  apiGroups: [\"apiextensions.k8s.io\"]\n  resources: [\"customresourcedefinitions\"]\n
  \ resourceNames: [\"bfdprofiles.metallb.io\",\"bgpadvertisements.metallb.io\",\n
  \   \"bgppeers.metallb.io\",\"ipaddresspools.metallb.io\",\"l2advertisements.metallb.io\",\"communities.metallb.io\"]\n
  \ verbs: [\"create\", \"delete\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n-
  apiGroups: [\"apiextensions.k8s.io\"]\n  resources: [\"customresourcedefinitions\"]\n
  \ verbs: [\"list\", \"watch\"]\n---\n# Source: metallb/templates/rbac.yaml\napiVersion:
  rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: metallb:speaker\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\nrules:\n- apiGroups: [\"\"]\n  resources:
  [\"services\", \"endpoints\", \"nodes\", \"namespaces\"]\n  verbs: [\"get\", \"list\",
  \"watch\"]\n- apiGroups: [\"discovery.k8s.io\"]\n  resources: [\"endpointslices\"]\n
  \ verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"events\"]\n
  \ verbs: [\"create\", \"patch\"]\n- apiGroups: [\"metallb.io\"]\n  resources: [\"servicel2statuses\",\"servicel2statuses/status\"]\n
  \ verbs: [\"*\"]\n---\n# Source: metallb/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind:
  ClusterRoleBinding\nmetadata:\n  name: metallb:controller\n  labels:\n    helm.sh/chart:
  metallb-0.15.2\n    app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance:
  metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n    app.kubernetes.io/managed-by:
  Helm\nsubjects:\n- kind: ServiceAccount\n  name: metallb-controller\n  namespace:
  metallb-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n
  \ name: metallb:controller\n---\n# Source: metallb/templates/rbac.yaml\napiVersion:
  rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: metallb:speaker\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\nsubjects:\n- kind: ServiceAccount\n  name:
  metallb-speaker\n  namespace: metallb-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n
  \ kind: ClusterRole\n  name: metallb:speaker\n---\n# Source: metallb/templates/rbac.yaml\napiVersion:
  rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: metallb-pod-lister\n
  \ namespace: \"metallb-system\"\n  labels:\n    helm.sh/chart: metallb-0.15.2\n
  \   app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version:
  \"v0.15.2\"\n    app.kubernetes.io/managed-by: Helm\nrules:\n- apiGroups: [\"\"]\n
  \ resources: [\"pods\"]\n  verbs: [\"list\", \"get\"]\n- apiGroups: [\"\"]\n  resources:
  [\"secrets\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"\"]\n  resources:
  [\"configmaps\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"metallb.io\"]\n
  \ resources: [\"bfdprofiles\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:
  [\"metallb.io\"]\n  resources: [\"bgppeers\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n-
  apiGroups: [\"metallb.io\"]\n  resources: [\"l2advertisements\"]\n  verbs: [\"get\",
  \"list\", \"watch\"]\n- apiGroups: [\"metallb.io\"]\n  resources: [\"bgpadvertisements\"]\n
  \ verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"metallb.io\"]\n  resources:
  [\"ipaddresspools\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"metallb.io\"]\n
  \ resources: [\"communities\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:
  [\"metallb.io\"]\n  resources: [\"servicebgpstatuses\",\"servicebgpstatuses/status\"]\n
  \ verbs: [\"*\"]\n---\n# Source: metallb/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind:
  Role\nmetadata:\n  name: metallb-controller\n  namespace: \"metallb-system\"\n  labels:\n
  \   helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance:
  metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n    app.kubernetes.io/managed-by:
  Helm\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"create\",
  \"get\", \"list\", \"watch\"]\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n
  \ resourceNames: [\"metallb-memberlist\"]\n  verbs: [\"list\"]\n- apiGroups: [\"apps\"]\n
  \ resources: [\"deployments\"]\n  resourceNames: [\"metallb-controller\"]\n  verbs:
  [\"get\"]\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"create\",
  \"delete\", \"get\", \"list\", \"patch\", \"update\", \"watch\"]\n- apiGroups: [\"metallb.io\"]\n
  \ resources: [\"ipaddresspools\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:
  [\"metallb.io\"]\n  resources: [\"ipaddresspools/status\"]\n  verbs: [\"update\"]\n-
  apiGroups: [\"metallb.io\"]\n  resources: [\"bgppeers\"]\n  verbs: [\"get\", \"list\"]\n-
  apiGroups: [\"metallb.io\"]\n  resources: [\"bgpadvertisements\"]\n  verbs: [\"get\",
  \"list\"]\n- apiGroups: [\"metallb.io\"]\n  resources: [\"l2advertisements\"]\n
  \ verbs: [\"get\", \"list\"]\n- apiGroups: [\"metallb.io\"]\n  resources: [\"communities\"]\n
  \ verbs: [\"get\", \"list\",\"watch\"]\n- apiGroups: [\"metallb.io\"]\n  resources:
  [\"bfdprofiles\"]\n  verbs: [\"get\", \"list\",\"watch\"]\n---\n# Source: metallb/templates/rbac.yaml\napiVersion:
  rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: metallb-pod-lister\n
  \ namespace: \"metallb-system\"\n  labels:\n    helm.sh/chart: metallb-0.15.2\n
  \   app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version:
  \"v0.15.2\"\n    app.kubernetes.io/managed-by: Helm\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n
  \ kind: Role\n  name: metallb-pod-lister\nsubjects:\n- kind: ServiceAccount\n  name:
  metallb-speaker\n---\n# Source: metallb/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind:
  RoleBinding\nmetadata:\n  name: metallb-controller\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n
  \ kind: Role\n  name: metallb-controller\nsubjects:\n- kind: ServiceAccount\n  name:
  metallb-controller\n---\n# Source: metallb/templates/webhooks.yaml\napiVersion:
  v1\nkind: Service\nmetadata:\n  name: metallb-webhook-service\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\nspec:\n  ports:\n  - port: 443\n    targetPort:
  9443\n  selector:\n    app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance:
  metallb\n    app.kubernetes.io/component: controller\n---\n# Source: metallb/templates/speaker.yaml\napiVersion:
  apps/v1\nkind: DaemonSet\nmetadata:\n  name: metallb-speaker\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: speaker\nspec:\n
  \ updateStrategy:\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app.kubernetes.io/name:
  metallb\n      app.kubernetes.io/instance: metallb\n      app.kubernetes.io/component:
  speaker\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name:
  metallb\n        app.kubernetes.io/instance: metallb\n        app.kubernetes.io/component:
  speaker\n    spec:\n      serviceAccountName: metallb-speaker\n      terminationGracePeriodSeconds:
  0\n      hostNetwork: true\n      volumes:\n        - name: memberlist\n          secret:\n
  \           secretName: metallb-memberlist\n            defaultMode: 420\n        -
  name: metallb-excludel2\n          configMap:\n            defaultMode: 256\n            name:
  metallb-excludel2\n        - name: frr-sockets\n          emptyDir: {}\n        -
  name: frr-startup\n          configMap:\n            name: metallb-frr-startup\n
  \       - name: frr-conf\n          emptyDir: {}\n        - name: reloader\n          emptyDir:
  {}\n        - name: metrics\n          emptyDir: {}\n      initContainers:\n        #
  Copies the initial config files with the right permissions to the shared volume.\n
  \       - name: cp-frr-files\n          image: quay.io/frrouting/frr:9.1.0\n          securityContext:\n
  \           runAsUser: 100\n            runAsGroup: 101\n          command: [\"/bin/sh\",
  \"-c\", \"cp -rLf /tmp/frr/* /etc/frr/\"]\n          volumeMounts:\n            -
  name: frr-startup\n              mountPath: /tmp/frr\n            - name: frr-conf\n
  \             mountPath: /etc/frr\n        # Copies the reloader to the shared volume
  between the speaker and reloader.\n        - name: cp-reloader\n          image:
  quay.io/metallb/speaker:v0.15.2\n          command: [\"/cp-tool\",\"/frr-reloader.sh\",\"/etc/frr_reloader/frr-reloader.sh\"]\n
  \         volumeMounts:\n            - name: reloader\n              mountPath:
  /etc/frr_reloader\n        # Copies the metrics exporter\n        - name: cp-metrics\n
  \         image: quay.io/metallb/speaker:v0.15.2\n          command: [\"/cp-tool\",\"/frr-metrics\",\"/etc/frr_metrics/frr-metrics\"]\n
  \         volumeMounts:\n            - name: metrics\n              mountPath: /etc/frr_metrics\n
  \     shareProcessNamespace: true\n      containers:\n      - name: speaker\n        image:
  quay.io/metallb/speaker:v0.15.2\n        args:\n        - --port=7472\n        -
  --log-level=info\n        env:\n        - name: METALLB_NODE_NAME\n          valueFrom:\n
  \           fieldRef:\n              fieldPath: spec.nodeName\n        - name: METALLB_HOST\n
  \         valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n
  \       - name: METALLB_ML_BIND_ADDR\n          valueFrom:\n            fieldRef:\n
  \             fieldPath: status.podIP\n        \n        - name: METALLB_ML_LABELS\n
  \         value: \"app.kubernetes.io/name=metallb,app.kubernetes.io/component=speaker\"\n
  \       - name: METALLB_ML_BIND_PORT\n          value: \"7946\"\n        - name:
  METALLB_ML_SECRET_KEY_PATH\n          value: \"/etc/ml_secret_key\"\n        - name:
  FRR_CONFIG_FILE\n          value: /etc/frr_reloader/frr.conf\n        - name: FRR_RELOADER_PID_FILE\n
  \         value: /etc/frr_reloader/reloader.pid\n        - name: METALLB_BGP_TYPE\n
  \         value: frr\n        - name: METALLB_POD_NAME\n          valueFrom:\n            fieldRef:\n
  \             fieldPath: metadata.name\n        ports:\n        - name: monitoring\n
  \         containerPort: 7472\n        - name: memberlist-tcp\n          containerPort:
  7946\n          protocol: TCP\n        - name: memberlist-udp\n          containerPort:
  7946\n          protocol: UDP\n        livenessProbe:\n          httpGet:\n            path:
  /metrics\n            port: monitoring\n          initialDelaySeconds: 10\n          periodSeconds:
  10\n          timeoutSeconds: 1\n          successThreshold: 1\n          failureThreshold:
  3\n        readinessProbe:\n          httpGet:\n            path: /metrics\n            port:
  monitoring\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          timeoutSeconds:
  1\n          successThreshold: 1\n          failureThreshold: 3\n        securityContext:\n
  \         allowPrivilegeEscalation: false\n          readOnlyRootFilesystem: true\n
  \         capabilities:\n            drop:\n            - ALL\n            add:\n
  \           - NET_RAW\n        volumeMounts:\n          - name: memberlist\n            mountPath:
  /etc/ml_secret_key\n          - name: reloader\n            mountPath: /etc/frr_reloader\n
  \         - name: metallb-excludel2\n            mountPath: /etc/metallb\n      -
  name: frr\n        securityContext:\n          capabilities:\n            add:\n
  \           - NET_ADMIN\n            - NET_RAW\n            - SYS_ADMIN\n            -
  NET_BIND_SERVICE\n        image: quay.io/frrouting/frr:9.1.0\n        env:\n          -
  name: TINI_SUBREAPER\n            value: \"true\"\n        volumeMounts:\n          -
  name: frr-sockets\n            mountPath: /var/run/frr\n          - name: frr-conf\n
  \           mountPath: /etc/frr\n        # The command is FRR's default entrypoint
  & waiting for the log file to appear and tailing it.\n        # If the log file
  isn't created in 60 seconds the tail fails and the container is restarted.\n        #
  This workaround is needed to have the frr logs as part of kubectl logs -c frr <
  speaker_pod_name >.\n        command:\n          - /bin/sh\n          - -c\n          -
  |\n            /sbin/tini -- /usr/lib/frr/docker-start &\n            attempts=0\n
  \           until [[ -f /etc/frr/frr.log || $attempts -eq 60 ]]; do\n              sleep
  1\n              attempts=$(( $attempts + 1 ))\n            done\n            tail
  -f /etc/frr/frr.log\n        livenessProbe:\n          httpGet:\n            path:
  livez\n            port: 7473\n          initialDelaySeconds: 10\n          periodSeconds:
  10\n          timeoutSeconds: 1\n          successThreshold: 1\n          failureThreshold:
  3\n        startupProbe:\n          httpGet:\n            path: /livez\n            port:
  7473\n          failureThreshold: 30\n          periodSeconds: 5\n      - name:
  reloader\n        image: quay.io/frrouting/frr:9.1.0\n        command: [\"/etc/frr_reloader/frr-reloader.sh\"]\n
  \       volumeMounts:\n          - name: frr-sockets\n            mountPath: /var/run/frr\n
  \         - name: frr-conf\n            mountPath: /etc/frr\n          - name: reloader\n
  \           mountPath: /etc/frr_reloader\n      - name: frr-metrics\n        image:
  quay.io/frrouting/frr:9.1.0\n        command: [\"/etc/frr_metrics/frr-metrics\"]\n
  \       args:\n          - --metrics-port=7473\n        env:\n          - name:
  VTYSH_HISTFILE\n            value: /dev/null\n        ports:\n          - containerPort:
  7473\n            name: monitoring\n        volumeMounts:\n          - name: frr-sockets\n
  \           mountPath: /var/run/frr\n          - name: frr-conf\n            mountPath:
  /etc/frr\n          - name: metrics\n            mountPath: /etc/frr_metrics\n      nodeSelector:\n
  \       \"kubernetes.io/os\": linux\n      tolerations:\n      - key: node-role.kubernetes.io/master\n
  \       effect: NoSchedule\n        operator: Exists\n      - key: node-role.kubernetes.io/control-plane\n
  \       effect: NoSchedule\n        operator: Exists\n---\n# Source: metallb/templates/controller.yaml\napiVersion:
  apps/v1\nkind: Deployment\nmetadata:\n  name: metallb-controller\n  namespace: \"metallb-system\"\n
  \ labels:\n    helm.sh/chart: metallb-0.15.2\n    app.kubernetes.io/name: metallb\n
  \   app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version: \"v0.15.2\"\n
  \   app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\nspec:\n
  \ strategy:\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app.kubernetes.io/name:
  metallb\n      app.kubernetes.io/instance: metallb\n      app.kubernetes.io/component:
  controller\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name:
  metallb\n        app.kubernetes.io/instance: metallb\n        app.kubernetes.io/component:
  controller\n    spec:\n      serviceAccountName: metallb-controller\n      terminationGracePeriodSeconds:
  0\n      securityContext:\n        fsGroup: 65534\n        runAsNonRoot: true\n
  \       runAsUser: 65534\n      containers:\n      - name: controller\n        image:
  quay.io/metallb/controller:v0.15.2\n        args:\n        - --port=7472\n        -
  --log-level=info\n        - --tls-min-version=VersionTLS12\n        env:\n        -
  name: METALLB_ML_SECRET_NAME\n          value: metallb-memberlist\n        - name:
  METALLB_DEPLOYMENT\n          value: metallb-controller\n        - name: METALLB_BGP_TYPE\n
  \         value: frr\n        ports:\n        - name: monitoring\n          containerPort:
  7472\n        - containerPort: 9443\n          name: webhook-server\n          protocol:
  TCP\n        volumeMounts:\n        - mountPath: /tmp/k8s-webhook-server/serving-certs\n
  \         name: cert\n          readOnly: true\n        livenessProbe:\n          httpGet:\n
  \           path: /metrics\n            port: monitoring\n          initialDelaySeconds:
  10\n          periodSeconds: 10\n          timeoutSeconds: 1\n          successThreshold:
  1\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n
  \           path: /metrics\n            port: monitoring\n          initialDelaySeconds:
  10\n          periodSeconds: 10\n          timeoutSeconds: 1\n          successThreshold:
  1\n          failureThreshold: 3\n        securityContext:\n          allowPrivilegeEscalation:
  false\n          readOnlyRootFilesystem: true\n          capabilities:\n            drop:\n
  \           - ALL\n      nodeSelector:\n        \"kubernetes.io/os\": linux\n      volumes:\n
  \     - name: cert\n        secret:\n          defaultMode: 420\n          secretName:
  metallb-webhook-cert\n---\n# Source: metallb/templates/webhooks.yaml\napiVersion:
  admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n
  \ name: metallb-webhook-configuration\n  labels:\n    helm.sh/chart: metallb-0.15.2\n
  \   app.kubernetes.io/name: metallb\n    app.kubernetes.io/instance: metallb\n    app.kubernetes.io/version:
  \"v0.15.2\"\n    app.kubernetes.io/managed-by: Helm\nwebhooks:\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta2-bgppeer\n  failurePolicy:
  Fail\n  name: bgppeervalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n    -
  metallb.io\n    apiVersions:\n    - v1beta2\n    operations:\n    - CREATE\n    -
  UPDATE\n    resources:\n    - bgppeers\n  sideEffects: None\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta1-ipaddresspool\n  failurePolicy:
  Fail\n  name: ipaddresspoolvalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n
  \   - metallb.io\n    apiVersions:\n    - v1beta1\n    operations:\n    - CREATE\n
  \   - UPDATE\n    resources:\n    - ipaddresspools\n  sideEffects: None\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta1-bgpadvertisement\n  failurePolicy:
  Fail\n  name: bgpadvertisementvalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n
  \   - metallb.io\n    apiVersions:\n    - v1beta1\n    operations:\n    - CREATE\n
  \   - UPDATE\n    resources:\n    - bgpadvertisements\n  sideEffects: None\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta1-community\n  failurePolicy:
  Fail\n  name: communityvalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n
  \   - metallb.io\n    apiVersions:\n    - v1beta1\n    operations:\n    - CREATE\n
  \   - UPDATE\n    resources:\n    - communities\n  sideEffects: None\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta1-bfdprofile\n  failurePolicy:
  Fail\n  name: bfdprofilevalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n
  \   - metallb.io\n    apiVersions:\n    - v1beta1\n    operations:\n    - CREATE\n
  \   - DELETE\n    resources:\n    - bfdprofiles\n  sideEffects: None\n- admissionReviewVersions:\n
  \ - v1\n  clientConfig:\n    service:\n      name: metallb-webhook-service\n      namespace:
  metallb-system\n      path: /validate-metallb-io-v1beta1-l2advertisement\n  failurePolicy:
  Fail\n  name: l2advertisementvalidationwebhook.metallb.io\n  rules:\n  - apiGroups:\n
  \   - metallb.io\n    apiVersions:\n    - v1beta1\n    operations:\n    - CREATE\n
  \   - UPDATE\n    resources:\n    - l2advertisements\n  sideEffects: None\n"
name: metallb
namespace: metallb-system
version: 1
